Index: AM-21/src/main/java/org/am21/client/view/TUI/Cli.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.am21.client.view.TUI;\r\n\r\nimport org.am21.client.view.Storage;\r\nimport org.am21.client.view.View;\r\nimport org.am21.networkRMI.ClientCallBack;\r\nimport org.am21.networkRMI.IClientInput;\r\nimport org.am21.networkRMI.Lobby;\r\n\r\nimport java.net.MalformedURLException;\r\nimport java.rmi.AlreadyBoundException;\r\nimport java.rmi.Naming;\r\nimport java.rmi.NotBoundException;\r\nimport java.rmi.RemoteException;\r\nimport java.rmi.server.ServerNotActiveException;\r\nimport java.util.*;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.concurrent.FutureTask;\r\n\r\nimport static org.am21.client.view.Storage.SHELF_COLUMN;\r\n\r\npublic class Cli implements View {\r\n    private String username;\r\n    private int playerIndex;\r\n    private Thread inputThread;\r\n    private IClientInput iClientInputHandler;\r\n    private final ClientCallBack clientCallBack;\r\n    private String player;\r\n    private final List<String> commonGoalList = new ArrayList<>();\r\n\r\n    /**\r\n     * If true askMenuAction\r\n     */\r\n    private boolean GO_TO_MENU = true;\r\n\r\n    /**\r\n     * If true askPlayerMove, if false askWaitingAction\r\n     */\r\n    private boolean GAME_ON = false;\r\n    private boolean START = false;\r\n    private boolean SEL_MODE = true;\r\n    private boolean NOT_SEL_YET = true;\r\n    private boolean BABY_PROTOCOL = true;\r\n    private int matchID;\r\n\r\n    public Cli() throws RemoteException {\r\n        this.clientCallBack = new ClientCallBack();\r\n        //TODO: keep it separate from constructor to avoid test destruction :)\r\n        this.clientCallBack.cli = this;\r\n    }\r\n\r\n    /**\r\n     * Read a line from the standard input\r\n     *\r\n     * @return the string read from the input\r\n     */\r\n    public String readLine() {\r\n        FutureTask<String> futureTask = new FutureTask<>(new InputReadTask());\r\n        inputThread = new Thread(futureTask);\r\n        inputThread.start();\r\n\r\n        String input = null;\r\n        try {\r\n            input = futureTask.get();\r\n        } catch (InterruptedException e) {\r\n            futureTask.cancel(true);\r\n            //Thread.currentThread().interrupt();\r\n            inputThread.interrupt();\r\n        } catch (ExecutionException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public void interruptThread() {\r\n        Thread.currentThread().interrupt();\r\n    }\r\n\r\n    public void init() {\r\n        System.out.println(Storage.MYSHELFIE4);\r\n        askToContinue();\r\n        try {\r\n            askServerInfo();\r\n            askLogin();\r\n            askToContinue();\r\n            askMenuAction();\r\n        } catch (ServerNotActiveException | MalformedURLException | NotBoundException | RemoteException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public void askToContinue() {\r\n        System.out.print(\"Press 'Enter' to continue\");\r\n        readLine();\r\n        System.out.println(\"-----------------------------------------------------------\");\r\n    }\r\n\r\n    public void askAssistMode() {\r\n        System.out.print(\"\"\"\r\n                -----------------------------------------------------------\r\n                Would you like to activate or deactivate ASSIST MODE? (Default: Active)\r\n                Tip: Keep Assist Mode active for an easier experience of the game\r\n                > Press 'Enter' to activate it\r\n                > Type 'off' to deactivate it\r\n                -----------------------------------------------------------\r\n                Enter the option you wish to select:\\040\"\"\");\r\n        String input = readLine();\r\n        switch (input) {\r\n            case \"\" -> {\r\n                BABY_PROTOCOL = true;\r\n                System.out.println(Color.CYAN + \"ASSIST MODE ON!\\n\" + Color.RESET);\r\n            }\r\n            case \"off\" -> {\r\n                BABY_PROTOCOL = false;\r\n                System.out.println(Color.RED + \"ASSIST MODE OFF!\\n\" + Color.RESET);\r\n            }\r\n            default -> askAssistMode();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Is this method redundant?\r\n     * TODO\r\n     * @param username User's name\r\n     */\r\n    public void initPlayer(String username) {\r\n        playerIndex = Storage.getPlayerIndex(username);\r\n        player = Storage.players.get(playerIndex);\r\n\r\n    }\r\n\r\n    public void askServerInfo() throws MalformedURLException, NotBoundException, RemoteException {\r\n        // First connection to the server --> Obtain the path for RMI\r\n        Lobby lobby = (Lobby) Naming.lookup(\"rmi://localhost:1234/Welcome\");\r\n        String root;\r\n        try {\r\n            root = lobby.connect();\r\n        } catch (AlreadyBoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        Map<String, String> serverInfo = new HashMap<>();\r\n        String defaultAddress = \"localhost\";\r\n        String defaultPort = \"8807\";\r\n        boolean validInput;\r\n\r\n        do {\r\n            System.out.print(\"Enter the server address: [\" + defaultAddress + \"]\");\r\n            String address = readLine();\r\n\r\n            if (address.equals(\"\")) {\r\n                serverInfo.put(\"address\", defaultAddress);\r\n                validInput = true;\r\n            } else if (address.equals(\"localhost\")) {\r\n                serverInfo.put(\"address\", address);\r\n                validInput = true;\r\n            } else {\r\n                System.out.println(Color.RED + \"Invalid address!\" + Color.RESET);\r\n                validInput = false;\r\n            }\r\n        } while (!validInput);\r\n\r\n        do {\r\n            System.out.print(\"Enter the server Port: [\" + defaultPort + \"]\");\r\n            String port = readLine();\r\n\r\n            if (port.equals(\"\")) {\r\n                serverInfo.put(\"port\", defaultPort);\r\n                validInput = true;\r\n            } else if (port.equals(\"8807\")) {\r\n                serverInfo.put(\"port\", port);\r\n                validInput = true;\r\n            } else {\r\n                System.out.println(Color.RED + \"Invalid port!\" + Color.RESET);\r\n                validInput = false;\r\n            }\r\n        } while (!validInput);\r\n\r\n        iClientInputHandler = (IClientInput) Naming.lookup(\"rmi://\" + serverInfo.get(\"address\") + \":\"\r\n                                                           + serverInfo.get(\"port\") + \"/\" + root);\r\n        iClientInputHandler.registerCallBack(clientCallBack);\r\n        System.out.println(\"Connected to \" + serverInfo.get(\"address\")\r\n                           + \":\" + serverInfo.get(\"port\"));\r\n    }\r\n\r\n    /*\r\n    public void clearCli(){\r\n       System.out.println(\"\\033[H\\033[2J\");\r\n        System.out.flush();\r\n    }\r\n    */\r\n\r\n    /**\r\n     * Registration of the User in the Game Server and association to CallBack\r\n     *\r\n     * @throws ServerNotActiveException\r\n     * @throws RemoteException\r\n     */\r\n    @Override\r\n    public void askLogin() throws ServerNotActiveException, RemoteException {\r\n        while (true) {\r\n            System.out.print(\"Enter the username: \");\r\n            String username = readLine();\r\n            if (username.equals(\"\")) {\r\n                System.out.println(Color.RED + \"You didn't choose a username. Try again\" + Color.RESET);\r\n                continue;\r\n            }\r\n            if (iClientInputHandler.logIn(username, clientCallBack)) {\r\n                this.username = username;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public void setGO_TO_MENU(boolean GO_TO_MENU) {\r\n        this.GO_TO_MENU = GO_TO_MENU;\r\n    }\r\n\r\n    public void setGAME_ON(boolean GAME_ON) {\r\n        this.GAME_ON = GAME_ON;\r\n    }\r\n\r\n    public void setMatchID(int matchID) {\r\n        this.matchID = matchID;\r\n    }\r\n\r\n    public void setSTART(boolean START) {\r\n        this.START = START;\r\n        if (START) {\r\n            System.out.print(Color.RED + \"Press 'Enter' to play\" + Color.RESET);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A switcher used to move through the 3 MAIN STATE of the CLI:\r\n     * MENU, WAITING ROOM, GAMEPLAY\r\n     * @throws ServerNotActiveException\r\n     * @throws RemoteException\r\n     */\r\n\r\n    public void redirect() throws ServerNotActiveException, RemoteException {\r\n        if (START) {\r\n            showMatchSetup();\r\n            setSTART(false);\r\n        }\r\n        askMenuAction();\r\n        askWaitingAction();\r\n        if (BABY_PROTOCOL) {\r\n            askPlayerMove();\r\n        } else {\r\n            askPlayerMoveExpert();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void askMenuAction() throws ServerNotActiveException, RemoteException {\r\n        while (GO_TO_MENU) {\r\n            System.out.println(Storage.menuOption);\r\n            showRandomTip();\r\n            System.out.print(\"-----------------------------------------------------------\\n\" +\r\n                             \"Enter the Command you wish to use: \");\r\n            String option = readLine();\r\n            if (option.startsWith(\"/chat\")) {\r\n                handleChatMessage(option);\r\n            } else {\r\n                switch (option) {\r\n                    case \"create\", \"c\" -> {\r\n                        if (askCreateMatch()) redirect();\r\n                    }\r\n                    case \"join\", \"j\" -> {\r\n                        if (askJoinMatch()) redirect();\r\n                    }\r\n                    case \"online\", \"o\" -> {\r\n                        showOnlinePlayer();\r\n                        askToContinue();\r\n                    }\r\n                    case \"exit\", \"e\" -> {\r\n                        if (askExitGame()) return;\r\n                    }\r\n                    case \"help\", \"h\" -> askAssistMode();\r\n                    default -> System.out.println(Color.RED + \"The [\" + option + \"] cannot be found! Please try again.\"\r\n                                                  + Color.RESET);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Showcase the Commands available during Waiting Players\r\n     */\r\n    public void askWaitingAction() throws RemoteException, ServerNotActiveException {\r\n        while (!GAME_ON && !GO_TO_MENU) {\r\n            System.out.println(\"-----------------------------------------------------------\\n\" +\r\n                               Color.WHITE_BRIGHT + \" {| Room \" + matchID + \" |}\" + Color.RESET);\r\n\r\n            System.out.println(Storage.waitingAction);\r\n            showRandomTip();\r\n            System.out.print(\"-----------------------------------------------------------\\n\"\r\n                             + \"Enter the Command you wish to use: \");\r\n            String option = readLine();\r\n            if (option.startsWith(\"/chat\")) {\r\n                handleChatMessage(option);\r\n            } else if (option.equals(\"\")) {\r\n                redirect();\r\n            } else {\r\n                switch (option) {\r\n                    case \"leave\", \"le\" -> {\r\n                        if (askLeaveMatch()) redirect();\r\n                    }\r\n                    case \"rules\", \"ru\" -> showGameRules();\r\n                    case \"online\", \"on\" -> showOnlinePlayer();\r\n                    default -> System.out.println(Color.RED + \"The [\" + option + \"] cannot be found! Please try again.\"\r\n                                                  + Color.RESET);\r\n                }\r\n                askToContinue();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void showCommandMenu() {\r\n        if (BABY_PROTOCOL) {\r\n            if (!SEL_MODE) {\r\n                System.out.println(Storage.commandMenu0);\r\n            } else {\r\n                if (NOT_SEL_YET) System.out.println(Storage.commandMenu1);\r\n                else System.out.println(Storage.commandMenu2);\r\n            }\r\n        } else {\r\n            System.out.println(Storage.commandMenuExtra);\r\n        }\r\n    }\r\n\r\n    //TODO: sort command removed from askPlayerMove (now only for askInsertion)\r\n    @Override\r\n    public void askPlayerMove() throws RemoteException, ServerNotActiveException {\r\n        while (GAME_ON && !GO_TO_MENU) {\r\n            showDisplay();\r\n            showWhoIsPlaying();\r\n            showCommandMenu();\r\n            showRandomTip();\r\n            System.out.print(\"\"\"\r\n                    -----------------------------------------------------------\r\n                    Enter the command you wish to use:\\040\"\"\");\r\n            String option = readLine();\r\n            if (option.startsWith(\"/chat\")) {\r\n                handleChatMessage(option);\r\n            } else if (option.equals(\"\")) {\r\n                redirect();\r\n            } else {\r\n                switch (option) {\r\n                    case \"select\", \"se\" -> askSelection();\r\n                    case \"deselect\", \"de\" -> askDeselection();\r\n                    case \"insert\", \"in\" -> askInsertion();\r\n                    case \"show\", \"sh\" -> askShowObject();\r\n                    case \"more\", \"mo\" -> askMoreOptions();\r\n                    default -> System.out.println(Color.RED + \"The [\" + option + \"] cannot be found! Please try again.\"\r\n                                                  + Color.RESET);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean askCreateMatch() throws ServerNotActiveException, RemoteException {\r\n        int playerNumber = askMaxSeats();\r\n        if (iClientInputHandler.createMatch(playerNumber)) {\r\n            askToContinue();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public int askMaxSeats() {\r\n        int playerNumber = 0;\r\n        do {\r\n            try {\r\n                System.out.print(\"Please select the number of players for this match [2 to 4]: \");\r\n                playerNumber = Integer.parseInt(readLine());\r\n                if (playerNumber < 2 || playerNumber > 4) {\r\n                    System.out.println(Color.RED + \"Invalid number! Please try again.\" + Color.RESET);\r\n                }\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(Color.RED + \"Invalid input! Please try again.\" + Color.RESET);\r\n            }\r\n        } while (playerNumber < 2 || playerNumber > 4);\r\n        System.out.println(\"Selected \" + playerNumber + \" players.\");\r\n        return playerNumber;\r\n    }\r\n\r\n    @Override\r\n    public boolean askJoinMatch() throws ServerNotActiveException, RemoteException {\r\n        showMatchList();\r\n        int matchID;\r\n        try {\r\n            System.out.print(\"Please enter the room number: \");\r\n            matchID = Integer.parseInt(readLine());\r\n            System.out.println(\"Selected Room [\" + matchID + \"].\");\r\n            if (iClientInputHandler.joinGame(matchID)) {\r\n                readLine();\r\n                return true;\r\n            } else {\r\n                System.out.println(Color.RED + \"Invalid number! Please try again.\" + Color.RESET);\r\n            }\r\n        } catch (NumberFormatException e) {\r\n            System.out.println(Color.RED + \"Invalid input! Please try again.\" + Color.RESET);\r\n        }\r\n        askToContinue();\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void showMatchList() throws RemoteException {\r\n        iClientInputHandler.printMatchList();\r\n    }\r\n\r\n    /**\r\n     * Called by CALLBACK\r\n     * Displays the initial setup:\r\n     * - Filled Board\r\n     * - 2 commonGoals\r\n     * - Player's personal goal\r\n     * - and current player\r\n     */\r\n    @Override\r\n    public void showMatchSetup() {\r\n        showBoard();\r\n        askToContinue();\r\n        showCommonGoals();\r\n        showPersonalGoal();\r\n        askToContinue();\r\n        System.out.println(Color.BLUE_BOLD + \"The match has started!\" + Color.RESET);\r\n        initPlayer(username);\r\n        announceCurrentPlayer();\r\n        askToContinue();\r\n    }\r\n\r\n    @Override\r\n    public boolean askLeaveMatch() throws RemoteException {\r\n        return iClientInputHandler.leaveMatch();\r\n    }\r\n\r\n    @Override\r\n    public boolean askExitGame() throws RemoteException {\r\n        if (iClientInputHandler.exitGame()) {\r\n            System.exit(0);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void askMoreOptions() throws RemoteException, ServerNotActiveException {\r\n        String command;\r\n        System.out.print(Storage.MoreOptions);\r\n        command = readLine();\r\n        switch (command) {\r\n            case \"leave\", \"le\" -> {\r\n                if (askLeaveMatch()) redirect();}\r\n            case \"exit\", \"ex\" -> askExitGame();\r\n            case \"help\", \"he\" -> askAssistMode();\r\n            case \"\" -> {}\r\n            default -> System.out.println(Color.RED + \"The [\" + command + \"] cannot be found! Please try again.\"\r\n                                          + Color.RESET);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showCommonGoals() {\r\n        System.out.println(\"Common Goals:\");\r\n        for (int i = 0; i < Storage.commonGoal.size(); i++) {\r\n            showGoalDescription(Storage.commonGoal.get(i));\r\n            System.out.println(Color.YELLOW + \"> Top score of this Common Goal: \" + Color.RESET +\r\n                               Storage.commonGoalScore.get(i) + \" points.\");\r\n            System.out.println();\r\n            askToContinue();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showPersonalGoal() {\r\n        System.out.println(username + \"'s PersonalGoal:\");\r\n        System.out.println(Storage.goalPersonalMap.get(Storage.personalGoal));\r\n        System.out.println(Storage.PGTable);\r\n        showPersonalPoints();\r\n        System.out.println();\r\n    }\r\n\r\n    @Override\r\n    public void announceCurrentPlayer() {\r\n        if (Storage.currentPlayer.equals(player)) {\r\n            System.out.println(Color.RED + \"[!] > Hey \" + player + \"!!! It's your turn!!!\" + Color.RESET);\r\n        } else {\r\n            System.out.println(Color.CYAN + \"It's \" + Storage.currentPlayer + \"'s turn.\" + Color.RESET);\r\n        }\r\n        System.out.println();\r\n    }\r\n\r\n    @Override\r\n    public void showWhoIsPlaying() {\r\n        if (Storage.currentPlayer.equals(username)) {\r\n            System.out.println(Color.RED_BRIGHT + \"{| Your Turn |}\" + Color.RESET);\r\n        } else {\r\n            System.out.println(Color.BLUE_BRIGHT + \"{| \" + Storage.currentPlayer + \"'s Turn |}\" + Color.RESET);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void showPlayerShelf() {\r\n\r\n        String[][] shelf = Storage.shelves.get(Storage.players.indexOf(username));\r\n        System.out.println(\"----------------------------------------------------\");\r\n        System.out.println(\"Your Shelf:\");\r\n        for (int j = 0; j < Storage.SHELF_COLUMN; j++) {\r\n            System.out.print(\"      \" + j + \"      \");\r\n        }\r\n        System.out.println();\r\n        for (int i = 0; i < Storage.SHELF_ROW; i++) {\r\n            for (int j = 0; j < Storage.SHELF_COLUMN; j++) {\r\n                String item = shelf[i][j] == null ? \"_________._\" : checkColorItem(shelf[i][j]);\r\n                System.out.print(\"[\" + item + \"]\");\r\n            }\r\n            System.out.println();\r\n        }\r\n        System.out.println();\r\n    }\r\n\r\n    public void showGroupPoints(){\r\n        System.out.println(\"Group Points Table: \");\r\n        System.out.print(Storage.GROUP_POINTS);\r\n        System.out.println(Color.YELLOW+\"--Tip: See Game Rules for more info\"+Color.RESET);\r\n    }\r\n\r\n    @Override\r\n    public void showEveryShelf() {\r\n        for (int k = 0; k < Storage.shelves.size(); k++) {\r\n            String[][] userShelf = Storage.shelves.get(k);\r\n            System.out.println(Storage.players.get(k) + \"'s Shelf:\");\r\n            for (int j = 0; j < SHELF_COLUMN; j++) {\r\n                System.out.print(\"      \" + j + \"      \");\r\n            }\r\n            System.out.println();\r\n            for (int i = 0; i < Storage.SHELF_ROW; i++) {\r\n                for (int j = 0; j < SHELF_COLUMN; j++) {\r\n                    String item = userShelf[i][j] == null ? \"_________._\" : checkColorItem(userShelf[i][j]);\r\n                    System.out.print(\"[\" + item + \"]\");\r\n                }\r\n                System.out.println();\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showBoard() {\r\n        String[][] board = Storage.virtualBoard;\r\n        System.out.println(\"Board:\");\r\n        System.out.print(\"  \");\r\n        for (int j = 0; j < Storage.BOARD_COLUMN; j++) {\r\n            System.out.print(\"      \" + j + \"       \");\r\n        }\r\n        System.out.println();\r\n        for (int i = 0; i < Storage.BOARD_ROW; i++) {\r\n            System.out.print(i + \" \");\r\n            for (int j = 0; j < Storage.BOARD_COLUMN; j++) {\r\n                if (board[i][j] != null && board[i][j].startsWith(\">\")) {\r\n                    //If the cell is temporarily selected by the player\r\n                    String item = checkColorItem(board[i][j].substring(1));\r\n                    System.out.print(Color.WHITE_BG + \"[\" + \"\" + item.replace\r\n                            (\"_\", Color.WHITE_BG + \"_\") + Color.WHITE_BG + \"]\"+ Color.RESET+\" \");\r\n                } else {\r\n                    String item = board[i][j] == null ? \"_________._\" : checkColorItem(board[i][j]);\r\n                    System.out.print(\"[\" + item + \"] \");\r\n                }\r\n            }\r\n            System.out.print(\" \");\r\n            System.out.println(i);\r\n        }\r\n        System.out.print(\"  \");\r\n        for (int j = 0; j < Storage.BOARD_COLUMN; j++) {\r\n            System.out.print(\"      \" + j + \"       \");\r\n        }\r\n        System.out.println();\r\n    }\r\n\r\n    public String checkColorItem(String item) {\r\n        int index1, index2 = item.length() - 3;\r\n\r\n        String itemType = item;\r\n        switch (item.substring(0, item.length() - 3)) {\r\n            case \"__Cats__\" -> {\r\n                index1 = item.indexOf(\"Cats\");\r\n                itemType = item.substring(0, index1) + Color.CATS + item.substring(index1 + \"Cats\".length(), index2) +\r\n                           Color.GREEN_BOLD_BRIGHT + item.substring(index2) + Color.RESET;\r\n            }\r\n            case \"_Books__\" -> {\r\n                index1 = item.indexOf(\"Books\");\r\n                itemType = item.substring(0, index1) + Color.BOOKS + item.substring(index1 + \"Books\".length(), index2) +\r\n                           Color.WHITE_BOLD_BRIGHT + item.substring(index2) + Color.RESET;\r\n            }\r\n            case \"_Games__\" -> {\r\n                index1 = item.indexOf(\"Games\");\r\n                itemType = item.substring(0, index1) + Color.GAMES + item.substring(index1 + \"Games\".length(), index2) +\r\n                           Color.YELLOW_BOLD_BRIGHT + item.substring(index2) + Color.RESET;\r\n            }\r\n            case \"_Frames_\" -> {\r\n                index1 = item.indexOf(\"Frames\");\r\n                itemType = item.substring(0, index1) + Color.FRAMES + item.substring(index1 + \"Frames\".length(), index2) +\r\n                           Color.BLUE_BOLD_BRIGHT + item.substring(index2) + Color.RESET;\r\n            }\r\n            case \"Trophies\" -> {\r\n                itemType = Color.CYAN_BOLD_BRIGHT + item + Color.RESET;\r\n            }\r\n            case \"_Plants_\" -> {\r\n                index1 = item.indexOf(\"Plants\");\r\n                itemType = item.substring(0, index1) + Color.PLANTS + item.substring(index1 + \"Plants\".length(), index2) +\r\n                           Color.MAGENTA_BOLD_BRIGHT + item.substring(index2) + Color.RESET;\r\n            }\r\n        }\r\n        return itemType;\r\n    }\r\n\r\n    @Override\r\n    public void showPlayersStats() {\r\n        List<String> playerList = Storage.players;\r\n        List<Integer> scoreList = Storage.scores;\r\n        for (int i = 0; i < playerList.size(); i++) {\r\n            System.out.println(\"> \" + playerList.get(i) + \"'s stats: \");\r\n            System.out.println(\"  \" + \"SCORE:\\t\" + scoreList.get(i));\r\n            System.out.println(\"  \" + \"STATUS:\\t\");     //Needed if the Connection resilience is implemented\r\n        }\r\n        askToContinue();\r\n        System.out.println();\r\n        showEveryShelf();\r\n        announceCurrentPlayer();\r\n        showHand();\r\n        System.out.println();\r\n    }\r\n\r\n    /**\r\n     * This method shows the Selection menu, one of the MAIN PHASES of the game\r\n     * @throws ServerNotActiveException\r\n     * @throws RemoteException\r\n     */\r\n    @Override\r\n    public void askSelection() throws ServerNotActiveException, RemoteException {\r\n        System.out.println(\"Select a cell on the board\");\r\n        boolean selectionConfirm;\r\n        do {\r\n            String confirm = \"\";\r\n            List<Integer> coordinates = askCoordinates();\r\n\r\n            while (!confirm.equals(\"y\")) {\r\n                System.out.print(Storage.selectConfirm);\r\n                confirm = readLine();\r\n                switch (confirm) {\r\n                    case \"y\":\r\n                        int row = coordinates.get(0);\r\n                        int column = coordinates.get(1);\r\n                        if (iClientInputHandler.selectCell(row, column)) {\r\n                            NOT_SEL_YET = false;\r\n                            System.out.println(Color.YELLOW + \"Item selected: \" +\r\n                                               showItemInCell(row, column).replace(\">\", \"\").\r\n                                                       replace(\"_\", \"\") + Color.RESET);\r\n                            showHand();\r\n                        }\r\n                        askToContinue();\r\n                        break;\r\n                    case \"n\":\r\n                        return;\r\n                    case \"r\":\r\n                        coordinates = askCoordinates();\r\n                        break;\r\n                    case \"show\":\r\n                        askShowObject();\r\n                        break;\r\n                    default:\r\n                        System.out.println(Color.RED + \"The [\" + confirm + \"] cannot be found! Please try again.\" +\r\n                                           Color.RESET);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            System.out.print(Storage.anotherCard);\r\n            selectionConfirm = \"y\".equals(readLine());\r\n        } while (selectionConfirm);\r\n    }\r\n\r\n    /**\r\n     * This method shows a sub menu of the Selection menu\r\n     * Ask the player to insert the coordinates on the board for the selection\r\n     * @return a list that represents the Coordinates (row,column)\r\n     */\r\n    public List<Integer> askCoordinates() {\r\n        showBoard();\r\n        System.out.println(\"Type the coordinates you wish to select ONE AT THE TIME (first ROW, then COLUMN).\");\r\n        List<Integer> coordinates = new ArrayList<>();\r\n        coordinates.add(askTheIndex(\"ROW\", 0, Storage.BOARD_ROW));\r\n        coordinates.add(askTheIndex(\"COLUMN\", 0, Storage.BOARD_COLUMN));\r\n        return coordinates;\r\n    }\r\n\r\n    /**\r\n     * Ask a single index\r\n     * Used for:{@link #askCoordinates()} or {@link #askIndex()} or {@link #askColumn()}\r\n     *\r\n     * @param type        \"ROW\" or \"COLUMN\" or \"Position1\" or \"Position2\"\r\n     * @param lower_limit the minimum value of index\r\n     * @param upper_limit the maximum value of index\r\n     * @return Index(ROW, COLUMN, Position according to type)\r\n     */\r\n    public int askTheIndex(String type, int lower_limit, int upper_limit) {\r\n        int select = -1;\r\n        do {\r\n            try {\r\n                System.out.print(type + \" (\" + lower_limit + \" to \" + (upper_limit - 1) + \"): \");\r\n                select = Integer.parseInt(readLine());\r\n                if (select < lower_limit || select > upper_limit) {\r\n                    System.out.println(Color.RED + \"Invalid number! Please try again.\" + Color.RESET);\r\n                }\r\n            } catch (NumberFormatException e) {\r\n                System.out.println(Color.RED + \"Invalid input! Please try again.\" + Color.RESET);\r\n            }\r\n        } while (select < lower_limit || select > upper_limit);\r\n        return select;\r\n    }\r\n\r\n    public String showItemInCell(int row, int column) {\r\n        return Storage.virtualBoard[row][column];\r\n    }\r\n\r\n    @Override\r\n    public void askDeselection() throws ServerNotActiveException, RemoteException {\r\n        if (BABY_PROTOCOL && !showHand()) {\r\n            System.out.println(Color.RED + \"You have not selected any card yet.\" + Color.RESET);\r\n        } else {\r\n            System.out.print(Storage.deselectConfirm);\r\n\r\n            boolean deselectConfirm = \"y\".equals(readLine());\r\n            if (deselectConfirm) {\r\n                if (iClientInputHandler.deselectCards()) {\r\n                    NOT_SEL_YET = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method shows the Insertion menu, one of the MAIN PHASES of the game\r\n     * @throws ServerNotActiveException\r\n     * @throws RemoteException\r\n     */\r\n    @Override\r\n    public void askInsertion() throws ServerNotActiveException, RemoteException {\r\n        if (iClientInputHandler.confirmSelection()) {\r\n            System.out.println(\"These are the cards you have selected:\");\r\n            if (showHand()) {\r\n                System.out.println(Storage.insertionConfirm);\r\n                boolean confirm = \"y\".equals(readLine());\r\n                if (confirm) {\r\n                    String option = \"\";\r\n                    while (!option.equals(\"leave\")) {\r\n                        System.out.print(Storage.commandInsert);\r\n                        option = readLine();\r\n                        switch (option) {\r\n                            case \"sort\" -> askSort();\r\n                            case \"show\" -> askShowObject();\r\n                            case \"insert\", \"in\" -> {\r\n                                showPlayerShelf();\r\n                                int column = askColumn();\r\n                                if(column!= -1) {\r\n                                    if (iClientInputHandler.insertInColumn(column)) {\r\n                                        showPlayerShelf();\r\n                                        System.out.println(Color.YELLOW + \"Inserted in the column: \" + column + Color.RESET);\r\n                                        askToContinue();\r\n                                        iClientInputHandler.endTurn();\r\n                                        NOT_SEL_YET = true;\r\n                                        SEL_MODE = false;\r\n                                    }\r\n                                }\r\n                            }\r\n                            case \"leave\", \"le\" -> {if (askLeaveMatch())  redirect();}\r\n                            default -> System.out.println(Color.RED + \"The [\" + option + \"] cannot be found! Please try again.\"\r\n                                                          + Color.RESET);\r\n                        }\r\n                        askToContinue();\r\n                    }\r\n                } else {\r\n                    System.out.println(Color.RED + \"Insertion canceled.\" + Color.RESET);\r\n                }\r\n            } else {\r\n                System.out.println(Color.RED + \"You can’t insert cards if you did not select any cards!\" + Color.RESET);\r\n            }\r\n        } else {\r\n            System.out.println(Color.RED + \"Selection Confirm failed\" + Color.RESET);\r\n        }\r\n    }\r\n\r\n    public void askSort() throws ServerNotActiveException, RemoteException {\r\n        System.out.println(\"There are the cards you have selected:\");\r\n        if (showHand()) {\r\n            System.out.println(\"Which position do you wish to swap?\");\r\n            List<Integer> itemSwapped = askIndex();\r\n            if (itemSwapped == null) {\r\n                System.out.println(\"Selection canceled.\");\r\n            } else if (!itemSwapped.get(0).equals(itemSwapped.get(1))) {\r\n                if (iClientInputHandler.sortHand(itemSwapped.get(0), itemSwapped.get(1))) {\r\n                    System.out.println(\"Card order changed.\");\r\n                }\r\n            } else {\r\n                System.out.println(\"Same position. Swap failed.\");\r\n            }\r\n        } else {\r\n            System.out.println(Color.RED + \"You can’t sort cards if you did not select any cards!\" + Color.RESET);\r\n        }\r\n    }\r\n\r\n    public List<Integer> askIndex() {\r\n        String sortConfirm;\r\n        int position1, position2;\r\n        position1 = askTheIndex(\"Position1\", 1, Storage.currentPlayerHand.size() + 1);\r\n        position2 = askTheIndex(\"Position2\", 1, Storage.currentPlayerHand.size() + 1);\r\n        System.out.println(\"You have chosen to swap \" +\r\n                           Storage.currentPlayerHand.get(position1 - 1).replace(\"_\", \"\") +\r\n                           \" and \" +\r\n                           Storage.currentPlayerHand.get(position2 - 1).replace(\"_\", \"\"));\r\n        System.out.print(Storage.indexConfirm);\r\n        sortConfirm = readLine();\r\n        switch (sortConfirm) {\r\n            case \"y\":\r\n                List<Integer> index = new ArrayList<>();\r\n                index.add(position1 - 1);\r\n                index.add(position2 - 1);\r\n\r\n                return index;\r\n            case \"r\":\r\n                askIndex();\r\n                break;\r\n            case \"n\":\r\n                return null;\r\n            default:\r\n                System.out.println(Color.RED + \"Invalid command! Please try again.\" + Color.RESET);\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * This method allows the view of the Items selected by the player\r\n     * Improper use of the name Hand, It should be: temporarily list of item selected on the board\r\n     * @return true if the \"hand\" is not empty, otherwise false\r\n     */\r\n    public boolean showHand() {\r\n        System.out.print(Storage.currentPlayer + \" has selected: \");\r\n        if (Storage.currentPlayerHand.isEmpty()) {\r\n            System.out.println(\"Nothing\");\r\n            return false;\r\n        }\r\n        for (int i = 0; i < Storage.currentPlayerHand.size(); i++) {\r\n            System.out.print((i + 1) + \".[\" +\r\n                             checkColorItem(Storage.currentPlayerHand.get(i)).replace(\"_\", \"\") + \"]  \");\r\n        }\r\n        System.out.println();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method shows a sub menu of the Insertion menu.\r\n     * Its task it to get the number of the column in which the player wish to insert the items\r\n     * @return  number of the column designated\r\n     */\r\n    public int askColumn() throws RemoteException, ServerNotActiveException {\r\n        System.out.println(\"In which column would you like to insert the cards?\");\r\n        String columnConfirm;\r\n        int column;\r\n        column = askTheIndex(\"COLUMN\", 0, SHELF_COLUMN);\r\n        System.out.print(\"\"\"\r\n                                 -----------------------------------------------------------\r\n                                 You have chosen Column:\\040\"\"\" + column + \"\\n\" + Storage.columnConfirm);\r\n\r\n        columnConfirm = readLine();\r\n        switch (columnConfirm) {\r\n            case \"y\":\r\n                return column;\r\n            case \"r\":\r\n                askColumn();\r\n                break;\r\n            case \"n\":\r\n                return -1;\r\n            default:\r\n                System.out.println(Color.RED + \"Invalid command! Please try again.\" + Color.RESET);\r\n                askColumn();\r\n            break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public void handleChatMessage(String option) throws RemoteException {\r\n        String message = option.substring(option.indexOf(\" \") + 1);\r\n        String usernameString = option.substring(5);\r\n        String regex = \"\\\\[|\\\\]\";\r\n        String[] matches = usernameString.split(regex);\r\n        if (matches.length > 1) {\r\n            String playerName = matches[1];\r\n            if (iClientInputHandler.sendPlayerMessage(message, playerName)) {\r\n                System.out.println(\"Message sent to: \" + playerName);\r\n            }\r\n        } else {\r\n            if (!iClientInputHandler.sendChatMessage(message)) {\r\n                System.out.println(Color.RED + \"The message was not sent\" + Color.RESET);\r\n            }\r\n        }\r\n        readLine();\r\n    }\r\n\r\n    @Override\r\n    public void showEndGameToken() {\r\n        if (Storage.endGameToken) {\r\n            System.out.println(\"The EndGame Token is taken, it's the last round!\");\r\n        } else {\r\n            System.out.println(\"The EndGame Token is still available. Good Luck!\");\r\n        }\r\n        System.out.println();\r\n    }\r\n\r\n    @Override\r\n    public void showTimer() {\r\n\r\n    }\r\n\r\n    /**\r\n     * This is a sub Menu used for showcase the objects of the game,\r\n     * like Board, Shelf, Goals....\r\n     * @throws RemoteException if {@link #showOnlinePlayer()} is called\r\n     *          and the client is not connected to the server through RMI\r\n     */\r\n    @Override\r\n    public void askShowObject() throws RemoteException {\r\n        String object = \"new_command\";\r\n        while (!object.equals(\"\")) {\r\n            System.out.print(Storage.listObjects);\r\n            object = readLine();\r\n            switch (object) {\r\n                case \"hand\",\"ha\" -> showHand();\r\n                case \"pgoal\",\"pg\" -> showPersonalGoal();\r\n                case \"cgoal\",\"cg\" -> showCommonGoals();\r\n                case \"shelf\",\"sh\" -> {showPlayerShelf();showGroupPoints();}\r\n                case \"board\",\"bo\" -> showBoard();\r\n                case \"stats\",\"st\" -> showPlayersStats();\r\n                case \"rules\",\"ru\" -> showGameRules();\r\n                case \"end\",\"en\" -> showEndGameToken();\r\n                case \"online\",\"on\" -> showOnlinePlayer();\r\n                case \"timer\",\"ti\" -> showTimer();\r\n                case \"\" -> {\r\n                    return;\r\n                }\r\n                default -> System.out.println(Color.RED + \"The [\" + object + \"] cannot be found! Please try again.\"\r\n                                              + Color.RESET);\r\n            }\r\n            askToContinue();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method forward a request directly to the Server\r\n     * --> It's going to display a list of online Players\r\n     * @throws RemoteException if Client is not connected to the Server through RMI\r\n     */\r\n    @Override\r\n    public void showOnlinePlayer() throws RemoteException {\r\n        iClientInputHandler.printOnlinePlayers();\r\n    }\r\n\r\n    public void printer(String message) {\r\n        System.out.println(message);\r\n        //TODO: try to fix the too many Press enter problem, it's a fail :(\r\n        //TODO: maybe try again later\r\n        interruptThread();\r\n    }\r\n\r\n    @Override\r\n    public void showGoalDescription(String commonGoalCard) {\r\n        System.out.println(Storage.goalCommonMap.get(commonGoalCard));\r\n\r\n    }\r\n\r\n    /**\r\n     * This method allows the user to read the GAME RULE\r\n     */\r\n    @Override\r\n    public void showGameRules() {\r\n        System.out.println(Storage.goalOfTheGame);\r\n        askToContinue();\r\n        System.out.println(Storage.gamePlay);\r\n        askToContinue();\r\n        System.out.println(Storage.refillingLivingRoom);\r\n        askToContinue();\r\n        System.out.println(Storage.fulfillingCommonGoal);\r\n        askToContinue();\r\n        System.out.println(Storage.gameEnd);\r\n        //TODO: maybe add this to storage?\r\n        Collections.addAll(commonGoalList, \"CommonGoal2Lines\", \"CommonGoal2Columns\", \"CommonGoal3Column\",\r\n                \"CommonGoal4Lines\", \"CommonGoal8Tiles\", \"CommonGoalCorner\", \"CommonGoalDiagonal\", \"CommonGoalSquare\",\r\n                \"CommonGoalStairs\", \"CommonGoal4Group\", \"CommonGoal6Group\", \"CommonGoalXShape\");\r\n        System.out.println(Color.YELLOW_BOLD + \"Common Goals:\");\r\n        for (String s : commonGoalList) {\r\n            showGoalDescription(s);\r\n        }\r\n        System.out.println();\r\n    }\r\n\r\n    /**\r\n     * Just for Debug\r\n     * @throws RemoteException\r\n     * @throws ServerNotActiveException\r\n     */\r\n    public void askPlayerMoveExpert() throws RemoteException, ServerNotActiveException {\r\n        while (GAME_ON && !GO_TO_MENU) {\r\n            showDisplay();\r\n            showWhoIsPlaying();\r\n            showCommandMenu();\r\n            showRandomTip();\r\n            System.out.print(\"\"\"\r\n                    -----------------------------------------------------------\r\n                    Enter the command you wish to use:\\040\"\"\");\r\n            String option = readLine();\r\n            if (option.startsWith(\"/chat\")) {\r\n                handleChatMessage(option);\r\n            } else if (option.equals(\"\")) {\r\n                redirect();\r\n            } else {\r\n                switch (option) {\r\n                    case \"select\", \"se\" -> askSelection();\r\n                    case \"deselect\", \"de\" -> askDeselection();\r\n                    case \"insert\", \"in\" -> askInsertion();\r\n                    case \"show\", \"sh\" -> askShowObject();\r\n                    case \"more\",\"mo\"-> askMoreOptions();\r\n                    default -> System.out.println(Color.RED + \"The [\" + option + \"] cannot be found! Please try again.\"\r\n                                                  + Color.RESET);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void checkTurn() {\r\n        if (Storage.currentPlayer.equals(username)) SEL_MODE = true;\r\n        else SEL_MODE = false;\r\n\r\n    }\r\n\r\n    /**\r\n     * This Method is used for DECORATION of TUI\r\n     */\r\n    public void showRandomTip() {\r\n        int max;\r\n        if (NOT_SEL_YET) max = Storage.SEL_TIPS;\r\n        else max = Storage.tips.size();\r\n        String tip = Storage.tips.get((int) (Math.random() * max));\r\n        System.out.println(tip);\r\n    }\r\n\r\n    /**\r\n     * This method is used for decoration of the TUI\r\n     */\r\n    public void displayMiniBoard() {\r\n        List<String> display = Storage.current_display;\r\n        String[][] board = Storage.virtualBoard;\r\n\r\n        display.set(0, display.get(0) + \"\\t\\t\\t{Board}\\t\\t\\t\\t\\t\\t\\t\");\r\n        for (int i = 0; i < Storage.BOARD_ROW; i++) {\r\n            display.set(i + 1, display.get(i + 1) + i);\r\n\r\n            for (int j = 0; j < Storage.BOARD_COLUMN; j++) {\r\n                if (board[i][j] != null && board[i][j].startsWith(\">\")) {\r\n                    //If the cell is temporarily selected by the player\r\n                    String item = giveMeColor(board[i][j].substring(1));\r\n                    display.set(i + 1, display.get(i + 1) + \" \" + Color.WHITE_BG + \"[\" + \"\" + item + Color.WHITE_BG + \"]\" + Color.RESET);\r\n                } else {\r\n                    String item = board[i][j] == null ? \" \" : giveMeColor(board[i][j]);\r\n                    display.set(i + 1, display.get(i + 1) + \" [\" + item + \"]\");\r\n                }\r\n            }\r\n            display.set(i + 1, display.get(i + 1) + \" \");\r\n            display.set(i + 1, display.get(i + 1) + i + \"|\\t\");\r\n        }\r\n        display.set(10, display.get(10) + \"  \");\r\n\r\n        for (int j = 0; j < Storage.BOARD_COLUMN; j++) {\r\n            display.set(10, display.get(10) + \" \" + j + \"  \");\r\n        }\r\n        display.set(10, display.get(10) + \"   \");\r\n        Storage.current_display = display;\r\n    }\r\n\r\n    public String giveMeColor(String item) {\r\n        String itemType = item;\r\n        switch (item.substring(0, item.length() - 3)) {\r\n            case \"__Cats__\" -> {\r\n                itemType = \"\\033[1;92m*\\033[0m\";\r\n            }\r\n            case \"_Books__\" -> {\r\n\r\n                itemType = \"\\033[1;97m*\\033[0m\";\r\n            }\r\n            case \"_Games__\" -> {\r\n                itemType = \"\\033[1;93m*\\033[0m\";\r\n            }\r\n            case \"_Frames_\" -> {\r\n                itemType = \"\\033[1;94m*\\033[0m\";\r\n            }\r\n            case \"Trophies\" -> {\r\n\r\n                itemType = \"\\033[1;96m*\\033[0m\";\r\n            }\r\n            case \"_Plants_\" -> {\r\n                itemType = \"\\033[1;95m*\\033[0m\";\r\n            }\r\n        }\r\n        return itemType;\r\n\r\n    }\r\n    /**\r\n     * This method is used for decoration of the TUI\r\n     */\r\n    public void displayMiniShelf() {\r\n        String[][] shelf = Storage.shelves.get(Storage.players.indexOf(username));\r\n        List<String> display = Storage.current_display;\r\n        display.set(3, display.get(3) + \"  {Your Shelf}\\t \");\r\n        for (int i = 0; i < Storage.SHELF_ROW; i++) {\r\n            for (int j = 0; j < SHELF_COLUMN; j++) {\r\n                String item = shelf[i][j] == null ? \" \" : giveMeColor(shelf[i][j]);\r\n                display.set(4 + i, display.get(4 + i) + \"[\" + item + \"]\");\r\n            }\r\n            display.set(4 + i, display.get(4 + i) + \"  \\t\");\r\n        }\r\n        display.set(10, display.get(10) + \" \\t\");\r\n        for (int j = 0; j < SHELF_COLUMN; j++) {\r\n            display.set(10, display.get(10) + \" \" + j + \" \");\r\n        }\r\n        display.set(10, display.get(10) + \"  \\t\");\r\n    }\r\n    /**\r\n     * This method is used for decoration of the TUI\r\n     */\r\n    public void displayMiniHand() {\r\n        List<String> display = Storage.current_display;\r\n        display.set(0, display.get(0) + \"{Selected cards}\\t\");\r\n        display.set(1, display.get(1) + \"   \");\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            if (i < Storage.currentPlayerHand.size()) {\r\n                String item = giveMeColor(Storage.currentPlayerHand.get(i));\r\n                display.set(1, display.get(1) + \"[\" + item + \"]\");\r\n            } else {\r\n                display.set(1, display.get(1) + \"[ ]\");\r\n            }\r\n        }\r\n        display.set(1,display.get(1) + \"\\t\\t\");\r\n        display.set(2,display.get(2) + \"\\t\\t\\t\\t\\t\");\r\n    }\r\n    /**\r\n     * This method is used for decoration of the TUI\r\n     */\r\n    public void displayMiniPGoal(int pID) {\r\n        List<String> display = Storage.current_display;\r\n        String[] tmp = Storage.PGoals.get(pID);\r\n        display.set(3, display.get(3) + \"\\t{PersonalGoal} \\t\");\r\n\r\n        for (int i = 4; i < Storage.current_display.size() - 1; i++) {\r\n            display.set(i, display.get(i) + tmp[i - 4] + \" \\t\");\r\n        }\r\n        for (int j = 0; j < SHELF_COLUMN; j++) {\r\n            display.set(10, display.get(10) + \" \" + j + \" \");\r\n        }\r\n        display.set(10, display.get(10) + \"  \\t\");\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * The first idea was to display in real time the progression of the Game\r\n     * to ONLY the player that were not playing, so while they were waiting they could watch at something more lively\r\n     * But then it was extended to the Current Player display too\r\n     */\r\n    public void showDisplay() {\r\n        Storage.reset_display();\r\n        displayMiniBoard();\r\n        displayMiniShelf();\r\n        if (SEL_MODE) displayMiniHand();\r\n        displayMiniPGoal(Storage.personalGoal);\r\n        displayMiniCGoal();\r\n        for (int i = 0; i < Storage.current_display.size(); i++) {\r\n            System.out.println(Storage.current_display.get(i));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is used for decoration of the TUI\r\n     */\r\n    public void displayMiniCGoal() {\r\n        List<String> display = Storage.current_display;\r\n        List<String> cGoal = Storage.commonGoal;\r\n        List<Integer> scores = Storage.commonGoalScore;\r\n\r\n        for (int i = 0; i < cGoal.size(); i++) {\r\n            display.set(i , display.get(i) + \"{\" + cGoal.get(i) + \"}\" + \": [\" + scores.get(i) + \"]\");\r\n        }\r\n    }\r\n\r\n\r\n    public void showPersonalPoints(){\r\n        int index=Storage.getPlayerIndex(username);\r\n        int points=Storage.hiddenPoints.get(index);\r\n        System.out.println(\"Personal Goal's points (Private): \"+points);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java b/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java
--- a/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java	(revision 0f05fd15ec2b5d6713c12147645083c540ef72ba)
+++ b/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java	(date 1682949236233)
@@ -760,7 +760,7 @@
                 boolean confirm = "y".equals(readLine());
                 if (confirm) {
                     String option = "";
-                    while (!option.equals("leave")) {
+                    while (!option.equals("leave") && !option.equals("insert") && !option.equals("in")) {
                         System.out.print(Storage.commandInsert);
                         option = readLine();
                         switch (option) {
@@ -769,11 +769,11 @@
                             case "insert", "in" -> {
                                 showPlayerShelf();
                                 int column = askColumn();
-                                if(column!= -1) {
+                                if(column != -1) {
                                     if (iClientInputHandler.insertInColumn(column)) {
                                         showPlayerShelf();
                                         System.out.println(Color.YELLOW + "Inserted in the column: " + column + Color.RESET);
-                                        askToContinue();
+                                        //askToContinue();
                                         iClientInputHandler.endTurn();
                                         NOT_SEL_YET = true;
                                         SEL_MODE = false;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"dd2f3e9a-b514-48f2-995d-660d696de66e\" name=\"Changes\" comment=\"update Cli\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_04_2023_00_07_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_04_2023_00_07__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_04_2023_16_13__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_04_2023_16_13__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/Storage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/Storage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"19ab3365-554c-40d9-959c-e6407d37c953\" name=\"Changes by jef\" comment=\"\" />\r\n    <list id=\"64e1bfe8-5cd0-4a7d-8217-c090321f1a9a\" name=\"Changes by maoyh\" comment=\"\" />\r\n    <list id=\"42cde9f1-cb4a-4a50-a56c-2af346c1cc75\" name=\"Changes by ximeng\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CoverageOptionsProvider\">\r\n    <option name=\"myAddOrReplace\" value=\"0\" />\r\n  </component>\r\n  <component name=\"ExportToHTMLSettings\">\r\n    <option name=\"OPEN_IN_BROWSER\" value=\"true\" />\r\n    <option name=\"OUTPUT_DIRECTORY\" value=\"C:\\Users\\user\\IdeaProjects\\IS23-AM21\\_deliveries\\report\\20230422\\GameTest\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"AnnotationType\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/main\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NFD0XR5dL3DHYxwIaU5VQWdQAW\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\r\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;D:/xmry/IS23-AM21/AM-21/src/main/java/org/am21/test&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/user/OneDrive - Politecnico di Milano/WebProject-100/KenEclipseShit/26-04-23&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs.jest.jest_package&quot;: &quot;&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.21034482&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"org.am21.board\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\user\\IdeaProjects\\IS23-AM21\\AM-21\\src\\main\\java\\org\\am21\\view\\gui\" />\r\n      <recent name=\"$PROJECT_DIR$/AM-21/imgs/boards\" />\r\n      <recent name=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/view/cli\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.am21\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"org.am21.board\" />\r\n      <recent name=\"org.am21.test\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"org.am21.utilities\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.LoginInterface\">\r\n    <configuration name=\"CLITest1\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.CLITest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CLITest2\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.CLITest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CLITest3\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.CLITest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CLITest5\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.CLITest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GameAppTest\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.GameAppTest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"--Server Main\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LivingRoomBoard\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.client.view.GUI.LivingRoomBoard\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.client.view.GUI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LoginInterface\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.client.view.GUI.LoginInterface\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.client.view.GUI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Proto\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.controller.ServerPrototype\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ServerTest\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.controller.ServerMain\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BagTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Bag\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Board\" />\r\n          <option name=\"ENABLED\" value=\"false\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.BoardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.CardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.BagTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BagTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.board.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.BagTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BoardTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Board\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Bag\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.BoardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Grid\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.BoardTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CommonGoalTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.CardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.goals.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.board.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.ItemCard\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Grid\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.CommonGoal\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.CommonGoals.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.goals\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.goals.CommonGoalTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GameTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.board.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.game\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.GameTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MatchTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Match\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Player\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.controller.PlayerController\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.game\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.MatchTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PersonalGoalTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.PersonalGoalCard\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.CardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.goals\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.goals.PersonalGoalTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlayerTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.controller.PlayerController\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Player\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Hand\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Board\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.player\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.player.PlayerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ShelfTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.ShelfTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"VirtualViewTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.game\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.VirtualViewTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.CLITest1\" />\r\n      <item itemvalue=\"Application.CLITest2\" />\r\n      <item itemvalue=\"Application.CLITest3\" />\r\n      <item itemvalue=\"Application.GameAppTest\" />\r\n      <item itemvalue=\"Application.CLITest5\" />\r\n      <item itemvalue=\"Application.ServerTest\" />\r\n      <item itemvalue=\"Application.Proto\" />\r\n      <item itemvalue=\"Application.LivingRoomBoard\" />\r\n      <item itemvalue=\"Application.LoginInterface\" />\r\n      <item itemvalue=\"JUnit.MatchTest\" />\r\n      <item itemvalue=\"JUnit.CommonGoalTest\" />\r\n      <item itemvalue=\"JUnit.BoardTest\" />\r\n      <item itemvalue=\"JUnit.ShelfTest\" />\r\n      <item itemvalue=\"JUnit.PlayerTest\" />\r\n      <item itemvalue=\"JUnit.PersonalGoalTest\" />\r\n      <item itemvalue=\"JUnit.BagTest\" />\r\n      <item itemvalue=\"JUnit.GameTest\" />\r\n      <item itemvalue=\"JUnit.VirtualViewTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.LoginInterface\" />\r\n        <item itemvalue=\"Application.LivingRoomBoard\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SliceToolwindowSettings\">\r\n    <option name=\"autoScroll\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"dd2f3e9a-b514-48f2-995d-660d696de66e\" name=\"Changes\" comment=\"fixed bug Cli\" />\r\n      <created>1679250713673</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679250713673</updated>\r\n      <workItem from=\"1679250715133\" duration=\"22000\" />\r\n      <workItem from=\"1679250813095\" duration=\"12000\" />\r\n      <workItem from=\"1679250912541\" duration=\"308000\" />\r\n      <workItem from=\"1679251381863\" duration=\"2604000\" />\r\n      <workItem from=\"1679308546002\" duration=\"349000\" />\r\n      <workItem from=\"1679308546002\" duration=\"3248000\" />\r\n      <workItem from=\"1679339055181\" duration=\"182000\" />\r\n      <workItem from=\"1680355152599\" duration=\"4883000\" />\r\n      <workItem from=\"1680417995006\" duration=\"8820000\" />\r\n      <workItem from=\"1680474797686\" duration=\"3253000\" />\r\n      <workItem from=\"1680501508839\" duration=\"8000000\" />\r\n      <workItem from=\"1680588895976\" duration=\"8012000\" />\r\n      <workItem from=\"1680608322081\" duration=\"11375000\" />\r\n      <workItem from=\"1680623672433\" duration=\"19107000\" />\r\n      <workItem from=\"1680701711746\" duration=\"14352000\" />\r\n      <workItem from=\"1680848366824\" duration=\"25424000\" />\r\n      <workItem from=\"1680907346325\" duration=\"3966000\" />\r\n      <workItem from=\"1680951551963\" duration=\"4145000\" />\r\n      <workItem from=\"1680995184877\" duration=\"1990000\" />\r\n      <workItem from=\"1681036343974\" duration=\"1835000\" />\r\n      <workItem from=\"1681131553944\" duration=\"15246000\" />\r\n      <workItem from=\"1681226309147\" duration=\"22942000\" />\r\n      <workItem from=\"1681288058934\" duration=\"19847000\" />\r\n      <workItem from=\"1681377455700\" duration=\"2639000\" />\r\n      <workItem from=\"1681398624102\" duration=\"21656000\" />\r\n      <workItem from=\"1681421652298\" duration=\"3602000\" />\r\n      <workItem from=\"1681460393180\" duration=\"12295000\" />\r\n      <workItem from=\"1681477081214\" duration=\"7986000\" />\r\n      <workItem from=\"1681541209096\" duration=\"7634000\" />\r\n      <workItem from=\"1681551899670\" duration=\"100000\" />\r\n      <workItem from=\"1681552007011\" duration=\"21000\" />\r\n      <workItem from=\"1681552047893\" duration=\"814000\" />\r\n      <workItem from=\"1681560816574\" duration=\"12870000\" />\r\n      <workItem from=\"1681577459186\" duration=\"2359000\" />\r\n      <workItem from=\"1681581643852\" duration=\"7446000\" />\r\n      <workItem from=\"1681632703543\" duration=\"5137000\" />\r\n      <workItem from=\"1681758338761\" duration=\"7840000\" />\r\n      <workItem from=\"1681825926566\" duration=\"1573000\" />\r\n      <workItem from=\"1681919105138\" duration=\"1042000\" />\r\n      <workItem from=\"1681921413336\" duration=\"449000\" />\r\n      <workItem from=\"1681925117787\" duration=\"185000\" />\r\n      <workItem from=\"1681925667465\" duration=\"4554000\" />\r\n      <workItem from=\"1681975516997\" duration=\"603000\" />\r\n      <workItem from=\"1681995021062\" duration=\"295000\" />\r\n      <workItem from=\"1682069476172\" duration=\"2902000\" />\r\n      <workItem from=\"1682113698452\" duration=\"4477000\" />\r\n      <workItem from=\"1682149826521\" duration=\"9836000\" />\r\n      <workItem from=\"1682190503949\" duration=\"10572000\" />\r\n      <workItem from=\"1682234904779\" duration=\"8324000\" />\r\n      <workItem from=\"1682257571912\" duration=\"10427000\" />\r\n      <workItem from=\"1682317780363\" duration=\"8504000\" />\r\n      <workItem from=\"1682408313525\" duration=\"20993000\" />\r\n      <workItem from=\"1682497334387\" duration=\"49000\" />\r\n      <workItem from=\"1682500173274\" duration=\"1127000\" />\r\n      <workItem from=\"1682510620073\" duration=\"17461000\" />\r\n      <workItem from=\"1682528990051\" duration=\"9228000\" />\r\n      <workItem from=\"1682538264689\" duration=\"295000\" />\r\n      <workItem from=\"1682538675635\" duration=\"9579000\" />\r\n      <workItem from=\"1682550087796\" duration=\"1964000\" />\r\n      <workItem from=\"1682576425125\" duration=\"7639000\" />\r\n      <workItem from=\"1682677331929\" duration=\"14417000\" />\r\n      <workItem from=\"1682758859302\" duration=\"9977000\" />\r\n      <workItem from=\"1682787043290\" duration=\"22037000\" />\r\n      <workItem from=\"1682878310093\" duration=\"11231000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"update scoringToken test\">\r\n      <created>1680516093577</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680516093577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"delete ScoringTokenCard.java\">\r\n      <created>1680684101816</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680684101816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fixed some cli problem\">\r\n      <created>1681588933882</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681588933882</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update Cli\">\r\n      <created>1681644813012</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681644813012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"create Color.java and fixed bug\">\r\n      <created>1682600470670</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682600470670</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"fixed bug Cli\">\r\n      <created>1682605844935</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682605844935</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n        <option value=\"Space.CommitStatus\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"74f73804-6c59-4467-bff0-edcfdcfb0c5d\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"structure\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"dir:D:/xmry/IS23-AM21/AM-21/src/test/java/org.am21\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"74f73804-6c59-4467-bff0-edcfdcfb0c5d\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add method Shelf as request\" />\r\n    <MESSAGE value=\"update scoringToken test\" />\r\n    <MESSAGE value=\"delete ScoringTokenCard.java\" />\r\n    <MESSAGE value=\"fixed some cli problem\" />\r\n    <MESSAGE value=\"create Color.java and fixed bug\" />\r\n    <MESSAGE value=\"fixed bug Cli\" />\r\n    <MESSAGE value=\"update Cli\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update Cli\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/AM-21/src/test/java/org.am21/board/ShelfTest.java</url>\r\n          <line>131</line>\r\n          <properties class=\"org.am21.board.ShelfTest\" method=\"testShelfFullness\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/AM-21/src/test/java/org.am21/game/VirtualViewTest.java</url>\r\n          <line>55</line>\r\n          <properties class=\"org.am21.game.VirtualViewTest\" method=\"testAfterStart\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"16\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java</url>\r\n          <line>144</line>\r\n          <properties class=\"org.am21.networkRMI.ClientInputHandler\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"25\" />\r\n        </line-breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"13\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <pin-to-top-manager>\r\n      <pinned-members>\r\n        <PinnedItemInfo parentTag=\"org.am21.model.items.Shelf\" memberName=\"slotCol\" />\r\n        <PinnedItemInfo parentTag=\"org.am21.model.Cards.ItemCard\" memberName=\"nameCard\" />\r\n        <PinnedItemInfo parentTag=\"org.am21.model.items.Shelf\" memberName=\"player\" />\r\n        <PinnedItemInfo parentTag=\"org.am21.model.items.Shelf\" memberName=\"matrix\" />\r\n      </pinned-members>\r\n    </pin-to-top-manager>\r\n    <watches-manager>\r\n      <configuration name=\"JUnit\">\r\n        <watch expression=\"s.slotCol\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$MatchTest.ic\" NAME=\"MatchTest Coverage Results\" MODIFIED=\"1682199892824\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.Match</FILTER>\r\n      <FILTER>org.am21.model.Player</FILTER>\r\n      <FILTER>org.am21.controller.PlayerController</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerControllerTest_selectionSimulation.ic\" NAME=\"PlayerControllerTest.selectionSimulation Coverage Results\" MODIFIED=\"1680467526674\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerControllerTest_randomSimulation.ic\" NAME=\"PlayerControllerTest.randomSimulation Coverage Results\" MODIFIED=\"1680449427731\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerTest.ic\" NAME=\"PlayerTest Coverage Results\" MODIFIED=\"1681245462567\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.controller.PlayerController</FILTER>\r\n      <FILTER>org.am21.model.Player</FILTER>\r\n      <FILTER>org.am21.model.items.Hand</FILTER>\r\n      <FILTER>org.am21.model.items.Board</FILTER>\r\n      <FILTER>org.am21.model.items.Shelf</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$WrongModelTest_runner.ic\" NAME=\"WrongModelTest.runner Coverage Results\" MODIFIED=\"1680734633906\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.extra.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$ShelfTest.ic\" NAME=\"ShelfTest Coverage Results\" MODIFIED=\"1681234399840\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.items.Shelf</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerTest__1_.ic\" NAME=\"PlayerTest (1) Coverage Results\" MODIFIED=\"1680734477813\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerControllerTest.ic\" NAME=\"PlayerControllerTest Coverage Results\" MODIFIED=\"1680447627787\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$BagTest.ic\" NAME=\"BagTest Coverage Results\" MODIFIED=\"1681165337612\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.items.Bag</FILTER>\r\n      <FILTER>org.am21.utilities.BoardUtil</FILTER>\r\n      <FILTER>org.am21.utilities.CardUtil</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerTest_unfinishedGameSimulation.ic\" NAME=\"PlayerTest.unfinishedGameSimulation Coverage Results\" MODIFIED=\"1680734516188\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$GameTest.ic\" NAME=\"GameTest Coverage Results\" MODIFIED=\"1682200260552\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.*</FILTER>\r\n      <FILTER>org.am21.board.*</FILTER>\r\n      <FILTER>org.am21.controller.*</FILTER>\r\n      <FILTER>org.am21.utilities.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$WrongModelTest_testPlayerList.ic\" NAME=\"WrongModelTest.testPlayerList Coverage Results\" MODIFIED=\"1680734614689\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$MatchTest_run.ic\" NAME=\"MatchTest.run Coverage Results\" MODIFIED=\"1680507582967\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$CommonGoalTest.ic\" NAME=\"CommonGoalTest Coverage Results\" MODIFIED=\"1681165866156\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.utilities.CardUtil</FILTER>\r\n      <FILTER>org.am21.goals.*</FILTER>\r\n      <FILTER>org.am21.board.*</FILTER>\r\n      <FILTER>org.am21.model.items.Shelf</FILTER>\r\n      <FILTER>org.am21.model.Cards.ItemCard</FILTER>\r\n      <FILTER>org.am21.model.items.Grid</FILTER>\r\n      <FILTER>org.am21.model.Cards.CommonGoal</FILTER>\r\n      <FILTER>org.am21.model.Cards.CommonGoals.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$BoardTest.ic\" NAME=\"BoardTest Coverage Results\" MODIFIED=\"1681165499235\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.items.Board</FILTER>\r\n      <FILTER>org.am21.model.items.Bag</FILTER>\r\n      <FILTER>org.am21.utilities.BoardUtil</FILTER>\r\n      <FILTER>org.am21.model.items.Grid</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$BoardTest_testOccupation.ic\" NAME=\"BoardTest.testOccupation Coverage Results\" MODIFIED=\"1680734659047\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.board.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0f05fd15ec2b5d6713c12147645083c540ef72ba)
+++ b/.idea/workspace.xml	(date 1682949110302)
@@ -5,11 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="dd2f3e9a-b514-48f2-995d-660d696de66e" name="Changes" comment="update Cli">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_04_2023_00_07_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24_04_2023_00_07__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_04_2023_16_13__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_04_2023_16_13__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/Storage.java" beforeDir="false" afterPath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/Storage.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java" beforeDir="false" afterPath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/TUI/Cli.java" afterDir="false" />
     </list>
     <list id="19ab3365-554c-40d9-959c-e6407d37c953" name="Changes by jef" comment="" />
@@ -105,7 +101,7 @@
       <recent name="org.am21.utilities" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.LoginInterface">
+  <component name="RunManager" selected="Application.LivingRoomBoard">
     <configuration name="CLITest1" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="org.am21.game.CLITest" />
       <module name="IS23-AM21" />
@@ -454,8 +450,8 @@
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.LoginInterface" />
         <item itemvalue="Application.LivingRoomBoard" />
+        <item itemvalue="Application.LoginInterface" />
       </list>
     </recent_temporary>
   </component>
