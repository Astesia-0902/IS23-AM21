Index: AM-21/src/main/java/org/am21/client/view/cli/Cli.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.am21.client.view.cli;\r\n\r\nimport org.am21.client.view.JSONConverter;\r\nimport org.am21.client.view.View;\r\nimport org.am21.networkRMI.ClientCallBack;\r\nimport org.am21.networkRMI.IClientInput;\r\n\r\nimport java.net.MalformedURLException;\r\nimport java.rmi.Naming;\r\nimport java.rmi.NotBoundException;\r\nimport java.rmi.RemoteException;\r\nimport java.rmi.server.ServerNotActiveException;\r\nimport java.util.*;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.concurrent.FutureTask;\r\n\r\npublic class Cli implements View {\r\n    String username;\r\n    private Thread inputThread;\r\n    private IClientInput iClientInputHandler;\r\n    private ClientCallBack clientCallBack;\r\n    private String player;\r\n    private int playerIndex;\r\n    private int personalGoal;\r\n    private static final int SHELF_ROW = 6;\r\n    private static final int SHELF_COLUMN = 5;\r\n    private static final int BOARD_ROW = 6;\r\n    private static final int BOARD_COLUMN = 5;\r\n\r\n    private boolean CANCEL_WAIT =false;\r\n    private boolean CANCEL_PLAY=false;\r\n\r\n\r\n    public Cli() throws RemoteException {\r\n        this.clientCallBack = new ClientCallBack();\r\n        //TODO: keep it separate from constructor to avoid test destruction :)\r\n        this.clientCallBack.cli = this;\r\n    }\r\n\r\n    /**\r\n     * Read a line from the standard input\r\n     *\r\n     * @return the string read from the input\r\n     * */\r\n    public String readLine() {\r\n        FutureTask<String> futureTask = new FutureTask<>(new InputReadTask());\r\n        inputThread = new Thread(futureTask);\r\n        inputThread.start();\r\n\r\n        String input = null;\r\n        try {\r\n            input = futureTask.get();\r\n        } catch (InterruptedException e) {\r\n            futureTask.cancel(true);\r\n            Thread.currentThread().interrupt();\r\n        } catch (ExecutionException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public void init() {\r\n        System.out.println(\"Welcome to MyShelfie Board Game!\");\r\n        askToContinue();\r\n        try {\r\n            askServerInfo();\r\n            while(!askLogin());\r\n            askToContinue();\r\n            goToMenu();\r\n        } catch (ServerNotActiveException | MalformedURLException | NotBoundException | RemoteException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public void askToContinue(){\r\n        System.out.print(\"Press 'Enter' to continue\");\r\n        readLine();\r\n        System.out.println(\"--------------------------------------------------\");\r\n    }\r\n\r\n    public void initPlayer(String username) {\r\n        playerIndex = JSONConverter.getPlayerIndex(username);\r\n        player = JSONConverter.players.get(playerIndex);\r\n        personalGoal = JSONConverter.personalGoal;\r\n    }\r\n\r\n    public void askServerInfo() throws MalformedURLException, NotBoundException, RemoteException {\r\n        Map<String, String> serverInfo = new HashMap<>();\r\n        String defaultAddress = \"localhost\";\r\n        String defaultPort = \"8807\";\r\n        boolean validInput;\r\n\r\n        do {\r\n            System.out.print(\"Enter the server address: [\" + defaultAddress + \"]\");\r\n            String address = readLine();\r\n\r\n            if (address.equals(\"\")) {\r\n                serverInfo.put(\"address\", defaultAddress);\r\n                validInput = true;\r\n            } else if (address.equals(\"localhost\")){\r\n                serverInfo.put(\"address\", address);\r\n                validInput = true;\r\n            } else {\r\n                System.out.println(\"Invalid address!\");\r\n                validInput = false;\r\n            }\r\n        } while (!validInput);\r\n\r\n        do {\r\n            System.out.print(\"Enter the server Port: [\" + defaultPort + \"]\");\r\n            String port = readLine();\r\n\r\n            if (port.equals(\"\")) {\r\n                serverInfo.put(\"port\", defaultPort);\r\n                validInput = true;\r\n            } else if (port.equals(\"8807\")){\r\n                serverInfo.put(\"port\", port);\r\n                validInput = true;\r\n            } else {\r\n                System.out.println(\"Invalid port!\");\r\n                validInput = false;\r\n            }\r\n        } while (!validInput);\r\n\r\n        //System.out.println(serverInfo.get(\"address\"));\r\n        //System.out.println(serverInfo.get(\"port\"));\r\n        //System.out.println(\"rmi://\" + serverInfo.get(\"address\") + \":\"+ serverInfo.get(\"port\") + \"/ClientInputHandler\");\r\n\r\n        iClientInputHandler = (IClientInput) Naming.lookup(\"rmi://\" + serverInfo.get(\"address\") + \":\"\r\n                + serverInfo.get(\"port\") + \"/ClientInputHandler\");\r\n        //TODO: registerCallBack is here\r\n        iClientInputHandler.registerCallBack(clientCallBack);\r\n        System.out.println(\"Connected to \" + serverInfo.get(\"address\")\r\n                    + \":\" + serverInfo.get(\"port\"));\r\n    }\r\n\r\n    /*\r\n    public void clearCli(){\r\n       System.out.println(\"\\033[H\\033[2J\");\r\n        System.out.flush();\r\n    }\r\n    */\r\n\r\n    /**\r\n     * Registration of the User in the Game Server and association to CallBack\r\n     * @return\r\n     * @throws ServerNotActiveException\r\n     * @throws RemoteException\r\n     */\r\n    @Override\r\n    public boolean askLogin() throws ServerNotActiveException, RemoteException {\r\n        System.out.print(\"Enter the username: \");\r\n        String username = readLine();\r\n        if(iClientInputHandler.logIn(username, clientCallBack)){\r\n            this.username=username;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void goToMenu() throws ServerNotActiveException, RemoteException {\r\n        while(!askMenuAction());\r\n    }\r\n\r\n    public void goToWaitingRoom() throws RemoteException {\r\n        while (!askWaitingAction()&&!CANCEL_WAIT);\r\n        CANCEL_WAIT =false;\r\n    }\r\n\r\n    public void goToMatchRoom() throws ServerNotActiveException, RemoteException {\r\n        while(!askPlayerMove() && !CANCEL_PLAY);\r\n        CANCEL_PLAY =false;\r\n    }\r\n\r\n    public void setCANCEL_WAIT(boolean CANCEL_WAIT) {\r\n        this.CANCEL_WAIT = CANCEL_WAIT;\r\n    }\r\n\r\n    public void setCANCEL_PLAY(boolean CANCEL_PLAY) {\r\n        this.CANCEL_PLAY = CANCEL_PLAY;\r\n    }\r\n\r\n    @Override\r\n    public boolean askMenuAction() throws ServerNotActiveException, RemoteException {\r\n        System.out.print(\"\"\"\r\n                -----------------------------------------------------------\r\n                Menu Option:\r\n                create - Create a new match.\r\n                join - Join a match.\r\n                exit - Exit game.\r\n                To send a message to a online player type ‘/chat[nickname]:’ followed by your message in the console.\r\n                -----------------------------------------------------------\r\n                \"\"\");\r\n        String option = \"\";\r\n        System.out.println(\"Enter the option you wish to select: \");\r\n        option = readLine();\r\n        if (option.startsWith(\"/chat\")){\r\n            handleChatMessage(option);\r\n        } else {\r\n            switch (option) {\r\n                case \"create\" -> {\r\n                    if(askCreateMatch()) return true;\r\n                }\r\n                case \"join\" -> {\r\n                    if(askJoinMatch()) return true;\r\n                }\r\n                case \"exit\" -> {\r\n                    if(askExitGame()) return true;\r\n                }\r\n                default -> System.out.println(\"Invalid command! Please try again.\");\r\n            }\r\n        }\r\n        askToContinue();\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean askCreateMatch() throws ServerNotActiveException, RemoteException {\r\n        System.out.println(\"Room generation in  progress...\");\r\n        int playerNumber = askMaxSeats();\r\n        return iClientInputHandler.createMatch(playerNumber);\r\n    }\r\n\r\n    @Override\r\n    public int askMaxSeats() {\r\n        int playerNumber = 0;\r\n        do {\r\n            try {\r\n                System.out.print(\"Please select the number of players [2 to 4]: \");\r\n                playerNumber = Integer.parseInt(readLine());\r\n                if (playerNumber < 2 || playerNumber > 4){\r\n                    System.out.println(\"Invalid number! Please try again.\");\r\n                }\r\n            } catch (NumberFormatException e){\r\n                System.out.println(\"Invalid input! Please try again.\");\r\n            }\r\n        } while (playerNumber < 2 || playerNumber > 4);\r\n        return playerNumber;\r\n    }\r\n\r\n    @Override\r\n    public boolean askJoinMatch() throws ServerNotActiveException, RemoteException {\r\n        //TODO: CLI display> Match_List\r\n        int matchID;\r\n\r\n        try {\r\n            System.out.print(\"Please enter the room number: \");\r\n            matchID = Integer.parseInt(readLine());\r\n            if(iClientInputHandler.joinGame(matchID)){\r\n                System.out.println(\"Selected Room [\" + matchID + \"].\");\r\n                return true;\r\n            }else{\r\n                System.out.println(\"Invalid number! Please try again.\");\r\n            }\r\n        } catch (NumberFormatException e){\r\n            System.out.println(\"Invalid input! Please try again.\");\r\n        }\r\n        return false;\r\n    }\r\n    @Override\r\n    public void showMatchList() throws RemoteException {\r\n        //TODO: add method in ClientIH that will use CB to return the match list\r\n    }\r\n\r\n    /**\r\n     * Showcase the Commands available during Waiting Players\r\n     *\r\n     * @return\r\n     */\r\n    private boolean askWaitingAction() throws RemoteException {\r\n        System.out.println(\"The match has not started yet. Waiting for more players to join... \");\r\n        System.out.println(\"\"\"\r\n                These are the commands available:\r\n                leave - Leave Match.\r\n                rules - Read Game Rules.\r\n                online - Show Online Players.\r\n                To send a message in the Match type ‘/chat:’ followed by your message in the console.\r\n                To send a message to a online player type ‘/chat[nickname]:’ followed by your message in the console.\r\n                \"\"\");\r\n\r\n        String option = \"\";\r\n        while (!option.equals(\"exit\")) {\r\n            System.out.print(\"Enter the option you wish to select: \");\r\n            option = readLine();\r\n            if (option.startsWith(\"/chat\")){\r\n                handleChatMessage(option);\r\n            } else {\r\n                switch (option) {\r\n                    case \"leave\" -> askLeaveMatch();\r\n                    case \"rules\" -> showGameRules();\r\n                    case \"online\" -> showOnlinePlayer();\r\n                    default -> System.out.println(\"Invalid command! Please try again.\");\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Called by CALLBACK\r\n     * Displays the initial setup:\r\n     * - Filled Board\r\n     * - 2 commonGoals\r\n     * - Player's personal goal\r\n     * - and current player\r\n     */\r\n    @Override\r\n    public void showMatchSetup() {\r\n        //TODO: Redo better\r\n\r\n        initPlayer(username);\r\n        showBoard();\r\n        showCommonGoals();\r\n        showPersonalGoal();\r\n        System.out.println(\"The match has started!\");\r\n        showCurrentPlayer();\r\n    }\r\n    private void showGameRules() {\r\n        System.out.println(\"\"\"\r\n                Goal of the game:\r\n                Players take item tiles from the living room and place them in their bookshelves to score points;\r\n                the game ends when a player completely fills their bookshelf. The player with more points at\r\n                the end will win the game. There are 4 ways to score points:\r\n                1. Personal Goal card\r\n                    The personal goal card grants points if you match the highlighted spaces with\r\n                    the corresponding item tiles.\r\n                    Example: In the illustrated situation, at the end of the game the tile disposal\r\n                    shows 3 matches, that is worth 4 points.\r\n                2. Common Goal cards\r\n                    The common goal cards grant points to the players who achieve the illustrated\r\n                    pattern. See the last page for a detailed descriptions of the common goal cards.\r\n                    Example: In a 3-player game on both Common Goal cards will be stacked\r\n                    the 4-, 6-, 8- scoring tokens (from bottom to top).\r\n                3. Adjacent Item tiles\r\n                    Groups of adjacent item tiles of the same type on your bookshelf grant\r\n                    points depending on how many tiles are connected (with one side touching).\r\n                    Note: Item tiles with the same background color are considered to be of the same type.\r\n                    Example: In the situation above, at the end of the game there are 5 groups of\r\n                    adjacent item tiles of the same type:\r\n                    8 Plant tiles: 8 pt\r\n                    4 Trophy tiles: 3 pt\r\n                    5 Cat tiles: 5 pt\r\n                    4 Frame tiles: 3 pt\r\n                    3 Boardgame tiles: 2 pt\r\n                    Total:\r\n                    21 points\r\n                4. Gane-end trigger\r\n                    The first player who completely fills their bookshelf scores 1 additional point.\r\n                \"\"\");\r\n        System.out.println(\"\"\"\r\n                Gameplay:\r\n                The game is divided in turns that take place in a clockwise order starting from the first player.\r\n                During your turn, you must take 1, 2 or 3 item tiles from the living room board, following these rules:\r\n                The tiles you take must be adjacent to each other and form a straight line.\r\n                All the tiles you take must have at least one side free (not touching directly other tiles) at the\r\n                beginning of your turn (i.e. you cannot take a tile that becomes free after your first pick).\r\n                Then, you must place all the tiles you’ve picked into 1 column of your bookshelf. You can decide\r\n                the order, but you cannot place tiles in more than 1 column in a single turn.\r\n                Note: You cannot take tiles if you don’t have enough available spaces in your bookshelf.\r\n                \"\"\");\r\n        System.out.println(\"\"\"\r\n                Refilling the living room:\r\n                The living room will be refiled when, at the end of your turn, on the board there are only item tiles\r\n                without any other adjacent tile, i.e. the next player can only take single tiles.\r\n                Put the item tiles left on the board back into the bag. Then, draw new item tiles from the bag and\r\n                place them randomly in all the spaces of the board (remember that spaces with dots are only available\\s\r\n                in 3- or 4-player games).\r\n                \"\"\");\r\n        System.out.println(\"\"\"\r\n                Fulfilling a common goal:\r\n                If at the end of your turn you have achieved the requirements of a common goal card, take the topmost\r\n                available scoring token from that card. You can achieve and take scoring tokens from both common goal\r\n                cards in the same turn. You can only score points from common goal cards once per game, so you can’t\r\n                take more scoring tokens with the same back number. Players who achieve the common goals requirements\r\n                first will score more points than the other players, so try to be faster than your opponents!\r\n                \"\"\");\r\n        System.out.println(\"\"\"\r\n                Game end:\r\n                The first player who fills all the spaces of their bookshelf takes the end game token. The game\r\n                continues until the player sitting to the right to the player holding the first player seat (if the end\r\n                of the game is triggered by the player sitting to the right to the first player, the game ends\r\n                immediately). Now you can proceed to the final scoring.\r\n                Each player will score:\r\n                    - The points indicated by the tokens they hold (scoring tokens and end game token);\r\n                    - 1/2/4/6/9/12 points for 1/2/3/4/5/6 item tiles in the exact position illustrated by their\r\n                      personal goal card;\r\n                    - 2/3/5/8 points for groups of 3/4/5/6+ item tiles of the same type adjacent on their bookshelf.\r\n                The player who scored most points wins the game. In case of a tie, the tied player sitting further\r\n                (clockwise) from the first player wins the game.\r\n                Scoring Example:\r\n                Example: Helena scores 12 points from scoring tokens, 6 points from her personal goal card, and\r\n                18 points from the groups of adjacent tiles in her bookshelf:\r\n                6 adjacent Trophy tiles: 8 points\r\n                5 adjacent Cat tiles: 5 points\r\n                5 adjacent Plants tiles: 5 points\r\n                4 matches on the personal goal: 6 points\r\n                Scoring tokens: 12 points\r\n                Total: 36 points\r\n                \"\"\");\r\n        showCommonGoals();\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean askLeaveMatch() throws RemoteException {\r\n        //TODO: fixe the null point\r\n        iClientInputHandler.leaveMatch();\r\n        System.out.println(\"See you soon. Bye.\");\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean askExitGame() {\r\n\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void showCommonGoals(){\r\n        for (int i = 0; i < JSONConverter.commonGoal.size(); i++) {\r\n            showGoalDescription(JSONConverter.commonGoal.get(i));\r\n        }\r\n        System.out.println(\"You received: \" + JSONConverter.commonGoalScore.get(playerIndex) + \" points.\");\r\n    }\r\n\r\n    @Override\r\n    public void showPersonalGoal() {\r\n        System.out.println(player + \"'s PersonalGoal:\");\r\n        switch (personalGoal) {\r\n            case 1 -> System.out.println(\"\"\"\r\n                    [_Plants_][______._][_Frames_][______._][______._]\r\n                    [______._][______._][______._][______._][__Cats__]\r\n                    [______._][______._][______._][_Books__][______._]\r\n                    [______._][_Games__][______._][______._][______._]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][______._][Trophies][______._][______._]\"\"\");\r\n            case 2 -> System.out.println(\"\"\"\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][_Plants_][______._][______._][______._]\r\n                    [__Cats__][______._][_Games__][______._][______._]\r\n                    [______._][______._][______._][______._][_Books__]\r\n                    [______._][______._][______._][Trophies][______._]\r\n                    [______._][______._][______._][______._][_Frames_]\"\"\");\r\n            case 3 -> System.out.println(\"\"\"\r\n                    [______._][______._][______._][______._][______._]\r\n                    [_Frames_][______._][______._][_Games__][______._]\r\n                    [______._][______._][_Plants_][______._][______._]\r\n                    [______._][__Cats__][______._][______._][Trophies]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [_Books__][______._][______._][______._][______._]\"\"\");\r\n            case 4 -> System.out.println(\"\"\"\r\n                    [______._][______._][______._][______._][_Games__]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [Trophies][______._][_Frames_][______._][______._]\r\n                    [______._][______._][______._][_Plants_][______._]\r\n                    [______._][_Books__][__Cats__][______._][______._]\r\n                    [______._][______._][______._][______._][______._]\"\"\");\r\n            case 5 -> System.out.println(\"\"\"\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][Trophies][______._][______._][______._]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][_Frames_][_Books__][______._][______._]\r\n                    [______._][______._][______._][______._][_Plants_]\r\n                    [_Games__][______._][______._][__Cats__][______._]\"\"\");\r\n            case 6 -> System.out.println(\"\"\"\r\n                    [______._][______._][Trophies][______._][__Cats__]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][______._][______._][_Books__][______._]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][_Games__][______._][_Frames_][______._]\r\n                    [_Plants_][______._][______._][______._][______._]\"\"\");\r\n            case 7 -> System.out.println(\"\"\"\r\n                    [__Cats__][______._][______._][______._][______._]\r\n                    [______._][______._][______._][_Frames_][______._]\r\n                    [______._][_Plants_][______._][______._][______._]\r\n                    [Trophies][______._][______._][______._][______._]\r\n                    [______._][______._][______._][______._][_Games__]\r\n                    [______._][______._][_Books__][______._][______._]\"\"\");\r\n            case 8 -> System.out.println(\"\"\"\r\n                    [______._][______._][______._][______._][_Frames_]\r\n                    [______._][__Cats__][______._][______._][______._]\r\n                    [______._][______._][Trophies][______._][______._]\r\n                    [_Plants_][______._][______._][______._][______._]\r\n                    [______._][______._][______._][_Books__][______._]\r\n                    [______._][______._][______._][_Games__][______._]\"\"\");\r\n            case 9 -> System.out.println(\"\"\"\r\n                    [______._][______._][_Games__][______._][______._]\r\n                    [______._][______._][______._][______._][______._]\r\n                    [______._][______._][__Cats__][______._][______._]\r\n                    [______._][______._][______._][______._][_Books__]\r\n                    [______._][Trophies][______._][______._][_Plants_]\r\n                    [_Frames_][______._][______._][______._][______._]\"\"\");\r\n            case 10 -> System.out.println(\"\"\"\r\n                    [______._][______._][______._][______._][Trophies]\r\n                    [______._][_Games__][______._][______._][______._]\r\n                    [_Books__][______._][______._][______._][______._]\r\n                    [______._][______._][______._][__Cats__][______._]\r\n                    [______._][_Frames_][______._][______._][______._]\r\n                    [______._][______._][______._][_Plants_][______._]\"\"\");\r\n            case 11 -> System.out.println(\"\"\"\r\n                    [______._][______._][_Plants_][______._][______._]\r\n                    [______._][_Books__][______._][______._][______._]\r\n                    [_Games__][______._][______._][______._][______._]\r\n                    [______._][______._][_Frames_][______._][______._]\r\n                    [______._][______._][______._][______._][__Cats__]\r\n                    [______._][______._][______._][Trophies][______._]\"\"\");\r\n            case 12 -> System.out.println(\"\"\"\r\n                    [______._][______._][_Books__][______._][______._]\r\n                    [______._][_Plants_][______._][______._][______._]\r\n                    [______._][______._][_Frames_][______._][______._]\r\n                    [______._][______._][______._][Trophies][______._]\r\n                    [______._][______._][______._][______._][_Games__]\r\n                    [__Cats__][______._][______._][______._][______._]\"\"\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showCurrentPlayer() {\r\n        if(JSONConverter.currentPlayer.equals(player)){\r\n            System.out.println(\"Hey \"+player+\"! It's your turn\");\r\n        }else{\r\n            System.out.println(\"It's \"+ JSONConverter.currentPlayer+\"'s turn. \");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showShelf() {\r\n        System.out.println(player + \"'s Shelf:\");\r\n        for (String[][] userShelf : JSONConverter.shelf) {\r\n            for (int i = 0; i < SHELF_ROW; i++) {\r\n                for (int j = 0; j < SHELF_COLUMN; j++) {\r\n                    String item = userShelf[i][j] == null? \"[______._] \" : userShelf[i][j];\r\n                    System.out.println(\"[\" + item + \"] \");\r\n                }\r\n                System.out.println(\"\\n\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showBoard() {\r\n        String[][] board = JSONConverter.virtualBoard;\r\n        System.out.println(\"Board:\");\r\n        for(int i = 0; i < BOARD_ROW; i++){\r\n            for(int j = 0; j < BOARD_COLUMN; j++){\r\n                String item = board[i][j] == null? \"[______._] \" : board[i][j];\r\n                System.out.println(\"[\" + item + \"] \");\r\n            }\r\n            System.out.println(\"\\n\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showPlayersStats() {\r\n        List<String> playerList = JSONConverter.players;\r\n        List<Integer> scoreList = JSONConverter.scores;\r\n        for (int i = 0; i < playerList.size(); i++) {\r\n            System.out.println(playerList.get(i) + \"'s stats: \");\r\n            System.out.println(playerList.get(i) + \"'s score: \" + scoreList.get(i));\r\n            showShelf();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void askSelection() throws ServerNotActiveException, RemoteException {\r\n        if (!JSONConverter.gamePhase.equals(\"Insertion\")) {\r\n                System.out.println(\"Select a cell on the board\");\r\n                boolean selectionConfirm;\r\n                do {\r\n                    String confirm = \"\";\r\n                    List<Integer> coordinates = askCoordinates();\r\n\r\n                    System.out.println(\"\"\"\r\n                            Now you can:\r\n                            y - Confirm you choice.\r\n                            n - Cancel your choice.\r\n                            r - Retry again.\r\n                            show - See a Game Object(Board, Shelf, Goals, ...)\r\n                            \"\"\");\r\n\r\n                    while (!confirm.equals(\"y\")) {\r\n                        confirm = readLine();\r\n                        switch (confirm) {\r\n                            case \"y\":\r\n                                int row = coordinates.get(0);\r\n                                int column = coordinates.get(1);\r\n                                if (iClientInputHandler.selectCell(row, column)) {\r\n                                    //System.out.println(\"Selection Successful!\");\r\n                                    System.out.print(\"Item selected: \");\r\n                                    showItemInCell(row, column);\r\n                                } else {\r\n                                    confirm = \"r\";\r\n                                }\r\n                                break;\r\n                            case \"n\":\r\n                                return;\r\n                            case \"r\":\r\n                                coordinates = askCoordinates();\r\n                                System.out.println(\"\"\"\r\n                                    Now you can:\r\n                                    y - Confirm you choice.\r\n                                    n - Cancel your choice.\r\n                                    r - Retry again.\r\n                                    show - See a Game Object(Board, Shelf, Goals, ...)\r\n                                    \"\"\");\r\n                                break;\r\n                            case \"show\":\r\n                                askShowObject();\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    System.out.println(\"\"\"\r\n                            Do you want to continue with selection?\r\n                            1. Yes.\r\n                            0. No.\"\"\");\r\n                    selectionConfirm = Boolean.parseBoolean(readLine());\r\n                } while (selectionConfirm);\r\n        }\r\n    }\r\n\r\n    public List<Integer> askCoordinates() {\r\n        System.out.println(\"Enter the coordinates you wish to select [row, column].\");\r\n        boolean selectConfirm;\r\n        int selectRow = 0, selectColumn = 0;\r\n\r\n        do {\r\n            do {\r\n                try {\r\n                    System.out.print(\"row (0 to \" + BOARD_ROW + \"): \");\r\n                    selectRow = Integer.parseInt(readLine());\r\n                    if (selectRow < 0 || selectRow > BOARD_ROW) {\r\n                        System.out.println(\"Invalid number! Please try again.\");\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    System.out.println(\"Invalid input! Please try again.\");\r\n                }\r\n            } while (selectRow < 0 || selectRow > BOARD_ROW);\r\n\r\n            do {\r\n                try {\r\n                    System.out.print(\"column (0 to \" + BOARD_COLUMN + \"): \");\r\n                    selectColumn = Integer.parseInt(readLine());\r\n                    if (selectColumn < 0 || selectColumn > BOARD_COLUMN) {\r\n                        System.out.println(\"Invalid number! Please try again.\");\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    System.out.println(\"Invalid input! Please try again.\");\r\n                }\r\n            } while (selectColumn < 0 || selectColumn > BOARD_COLUMN);\r\n\r\n            //TODO: la conferma o retry è gia presente in askSelection(), quindi questo è ridondante\r\n            System.out.println(\"The coordinates you have chosen are: [\" + selectRow + \", \" +\r\n                    selectColumn + \"] - \" + showItemInCell(selectRow, selectColumn));\r\n            System.out.println(\"\"\"\r\n            Confirm your choice:\r\n            1. Confirm.\r\n            0. Re-select.\"\"\");\r\n\r\n            selectConfirm = Boolean.parseBoolean(readLine());\r\n        } while(!selectConfirm);\r\n        List<Integer> coordinates = new ArrayList<>();\r\n        coordinates.add(selectRow);\r\n        coordinates.add(selectColumn);\r\n        return coordinates;\r\n    }\r\n\r\n    public String showItemInCell(int row, int column) {\r\n        return JSONConverter.virtualBoard[row][column];\r\n    }\r\n\r\n    @Override\r\n    public void askDeselection() throws ServerNotActiveException, RemoteException {\r\n        if (!JSONConverter.gamePhase.equals(\"Insertion\")) {\r\n            showHand();\r\n            System.out.println(\"\"\"\r\n                    Are you sure to cancel all of your selection?\r\n                    1. Yes.\r\n                    0. No.\"\"\");\r\n\r\n            boolean deselectConfirm = Boolean.parseBoolean(readLine());\r\n            if (deselectConfirm) {\r\n                iClientInputHandler.deselectCards();\r\n            }\r\n        } else {\r\n            System.out.println(\"The conditions to use this command are not respected. Try again\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void askInsertion() throws ServerNotActiveException, RemoteException {\r\n        System.out.println(\"These are the cards you have selected:\");\r\n        if (showHand()) {\r\n            String option = \"\";\r\n            while (!option.equals(\"n\")){\r\n                System.out.println(\"\"\"\r\n                        These are the commands available:\r\n                        sort - Change the order of your cards.\r\n                        show - Look at game board objects.\r\n                        go - Go directly to insertion.\r\n                        n - Cancel your choice.\r\n                        \"\"\");\r\n                option = readLine();\r\n                switch (option) {\r\n                    case \"sort\" -> askSort();\r\n                    case \"show\" -> askShowObject();\r\n                    case \"go\" -> {\r\n                        showShelf();\r\n                        int column = askColumn();\r\n                        iClientInputHandler.insertInColumn(column);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            System.out.println(\"You can’t insert cards if you did not select any cards!\");\r\n        }\r\n    }\r\n\r\n    public void askSort() throws ServerNotActiveException, RemoteException {\r\n        System.out.println(\"There are the cards you have selected:\");\r\n        showHand();\r\n        System.out.println(\"Which position do you wish to swap?\");\r\n        List<Integer> itemSwapped = askIndex();\r\n        if (!itemSwapped.get(0).equals(itemSwapped.get(1))) {\r\n            if (iClientInputHandler.sortHand(itemSwapped.get(0), itemSwapped.get(1))) {\r\n                System.out.println(\"Card order changed.\");\r\n            }\r\n        } else {\r\n            System.out.println(\"Same position. Swap failed.\");\r\n        }\r\n    }\r\n\r\n    public List<Integer> askIndex() {\r\n        boolean sortConfirm;\r\n        int position1 = 1, position2 = 2;\r\n\r\n        do {\r\n            do {\r\n                try {\r\n                    System.out.print(\"position1 (1 to \" + JSONConverter.currentPlayerHand.size() + \"): \");\r\n                    position1 = Integer.parseInt(readLine());\r\n                    if (position1 < 1 || position1 > JSONConverter.currentPlayerHand.size()) {\r\n                        System.out.println(\"Invalid number! Please try again.\");\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    System.out.println(\"Invalid input! Please try again.\");\r\n                }\r\n            } while (position1 < 1 || position1 > JSONConverter.currentPlayerHand.size());\r\n\r\n            do {\r\n                try {\r\n                    System.out.print(\"position2 (1 to \" + JSONConverter.currentPlayerHand.size() + \"): \");\r\n                    position2 = Integer.parseInt(readLine());\r\n                    if (position2 < 1 || position2 > JSONConverter.currentPlayerHand.size()) {\r\n                        System.out.println(\"Invalid number! Please try again.\");\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    System.out.println(\"Invalid input! Please try again.\");\r\n                }\r\n            } while (position2 < 1 || position2 > JSONConverter.currentPlayerHand.size());\r\n\r\n            System.out.println(\"You have chosen to swap \" + JSONConverter.currentPlayerHand.get(position1 - 1) + \" and \" +\r\n                    JSONConverter.currentPlayerHand.get(position2 - 1));\r\n            System.out.println(\"Confirm your choice:\");\r\n            System.out.println(\"1. Confirm.\");\r\n            System.out.println(\"0. Re-select.\");\r\n\r\n            sortConfirm = Boolean.parseBoolean(readLine());\r\n        } while(!sortConfirm);\r\n        List<Integer> index = new ArrayList<>();\r\n        index.add(position1 - 1);\r\n        index.add(position2 - 1);\r\n\r\n        return index;\r\n    }\r\n\r\n    public boolean showHand() {\r\n        System.out.println(player +\" have in hand:\");\r\n        if (JSONConverter.currentPlayerHand.isEmpty()){\r\n            return false;\r\n        }\r\n        for (int i = 0; i < JSONConverter.currentPlayerHand.size(); i++) {\r\n            System.out.println(JSONConverter.currentPlayerHand.get(i));\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public int askColumn() {\r\n        System.out.println(\"In which column would you like to insert the cards?\");\r\n        boolean columnConfirm;\r\n        int column = 0;\r\n         do {\r\n            do {\r\n                try {\r\n                    System.out.print(\"Column (0 to \" + SHELF_COLUMN + \"): \");\r\n                    column = Integer.parseInt(readLine());\r\n                    if (column < 0 || column > SHELF_COLUMN) {\r\n                        System.out.println(\"Invalid number! Please try again.\");\r\n                    }\r\n                } catch (NumberFormatException e) {\r\n                    System.out.println(\"Invalid input! Please try again.\");\r\n                }\r\n            } while (column < 0 || column > SHELF_COLUMN);\r\n             System.out.println(\"\"\"\r\n            You have chosen Column\\040\"\"\" + column + \"\"\"\r\n            Confirm your choice:\r\n            1. Confirm.\r\n            0. Re-select.\"\"\");\r\n\r\n            columnConfirm = Boolean.parseBoolean(readLine());\r\n        } while (!columnConfirm);\r\n        return column;\r\n    }\r\n\r\n    public void handleChatMessage(String option) throws RemoteException {\r\n        String message = readLine();\r\n\r\n        String usernameString = option.substring(5);\r\n        String regex = \"\\\\[(.*?)\\\\]\";\r\n        String[] matches = usernameString.split(regex);\r\n\r\n        if (matches.length > 1){\r\n            // esiste username = playerName\r\n            String playerName = matches[1];\r\n            //TODO: sendChatMessage to a player\r\n            //iClientInputHandler.sendChatMessage(message, playerName);\r\n        } else {\r\n            // non contiene username\r\n            iClientInputHandler.sendChatMessage(message);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void showEndGameToken() {\r\n        if (JSONConverter.endGameToken){\r\n            System.out.println(\"EndGame Token is taken, it's the last round!\");\r\n        } else {\r\n            System.out.println(\"EndGame Token has not been taken.\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showTimer() {\r\n\r\n    }\r\n\r\n    private void showCommandMenu() {\r\n        if (!JSONConverter.gamePhase.equals(\"Insertion\")) {\r\n            System.out.println(\"\"\"\r\n                    select - Select an item on the board.\r\n                    deselect - Deselect the cards.\r\n                    sort - Change selected items order(at least 2 items selected).\r\n                    insert - Insert in the shelves.\r\n                    show - Show Game Object(Hand, Goals, Board, Shelf, ...).\r\n                    leave - Leave Match.\r\n                    exit - Exit Game.\r\n                    To send a message in the Match type ‘/chat:’ followed by your message in the console.\r\n                    To send a message to a online player type ‘/chat[nickname]:’ followed by your message in the console.\r\n                    \"\"\");\r\n        } else {\r\n            System.out.println(\"\"\"\r\n                    sort - Change selected items order(at least 2 items selected).\r\n                    insert - Insert in the shelves.\r\n                    show - Show Game Object(Hand, Goals, Board, Shelf, ...).\r\n                    leave - Leave Match.\r\n                    exit - Exit Game.\r\n                    To send a message in the Match type ‘/chat:’ followed by your message in the console.\r\n                    To send a message to a online player type ‘/chat[nickname]:’ followed by your message in the console.\r\n                    \"\"\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean askPlayerMove() throws RemoteException, ServerNotActiveException {\r\n        System.out.println(\"What do you wish to do? These are the commands available:\");\r\n        showCommandMenu();\r\n        String option = \"\";\r\n\r\n        System.out.println(\"Enter the command you wish to use:\");\r\n        option = readLine();\r\n\r\n            if (option.startsWith(\"/chat\")){\r\n                handleChatMessage(option);\r\n            } else {\r\n                switch (option) {\r\n                    case \"select\" -> askSelection();\r\n                    case \"deselect\" -> askDeselection();\r\n                    case \"show\" -> askShowObject();\r\n                    case \"leave\" -> {\r\n                        if (askLeaveMatch()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    case \"exit\" -> {\r\n                        if (askExitGame()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void askShowObject() {\r\n        System.out.println(\"\"\"\r\n                List of Objects:\r\n                hand - Show selected items.\r\n                pgoal - See your Personal Goal.\r\n                cgoal - See Common Goals.\r\n                shelf - See your shelf and the insertion limit.\r\n                board - See Living Room Board.\r\n                stats - See Players Stats.\r\n                rules - See Game Rules.\r\n                end - Show if the Endgame Token is taken (if it is, then it's the last round).\r\n                timer - Show timer.\r\n                n - Cancel your choice.\r\n                \"\"\");\r\n\r\n        String object = \"\";\r\n        while (!object.equals(\"n\")){\r\n            System.out.print(\"Enter the object you wish to be shown: \");\r\n            object = readLine();\r\n            switch (object) {\r\n                case \"hand\" -> showHand();\r\n                case \"pgoal\" -> showPersonalGoal();\r\n                case \"cgoal\" -> showCommonGoals();\r\n                case \"shelf\" -> showShelf();\r\n                case \"board\" -> showBoard();\r\n                case \"stats\" -> showPlayersStats();\r\n                case \"rules\" -> showGameRules();\r\n                case \"end\" -> showEndGameToken();\r\n                case \"timer\" -> showTimer();\r\n                default -> System.out.println(\"The [\" + object + \"] cannot be found! Please try again.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void showOnlinePlayer() throws RemoteException {\r\n        iClientInputHandler.printOnlinePlayers();\r\n    }\r\n    public void printer(String message){\r\n        System.out.println(message);\r\n    }\r\n\r\n    public void showGoalDescription(String CommonGoalCard) {\r\n        switch (CommonGoalCard){\r\n            case \"CommonGoal2Lines\":\r\n                System.out.println(\"CommonGoal2Lines: Two columns each formed by 6 different types of tiles.\");\r\n                break;\r\n            case \"CommonGoal2Columns\":\r\n                System.out.println(\"CommonGoal2Columns: Two lines each formed by 5 different types of tiles. \" +\r\n                        \"One line can show the same or a different combination of the other line.\");\r\n                break;\r\n            case \"CommonGoal3Column\":\r\n                System.out.println(\"CommonGoal3Column: Three columns each formed by 6 tiles of maximum three \" +\r\n                        \"different types. One column can show the same or a different combination of another column.\");\r\n                break;\r\n            case \"CommonGoal4Lines\":\r\n                System.out.println(\"CommonGoal4Lines: Four lines each formed by 5 tiles of maximum three \" +\r\n                        \"different types. One line can show the same or a different combination of another line.\");\r\n                break;\r\n            case \"CommonGoal8Tiles\":\r\n                System.out.println(\"CommonGoal8Tiles: Eight tiles of the same type. \" +\r\n                        \"There’s no restriction about the position of these tiles.\");\r\n                break;\r\n            case \"CommonGoalCorner\":\r\n                System.out.println(\"CommonGoalCorner: Four tiles of the same type in the four corners of \" +\r\n                        \"the bookshelf.\");\r\n                break;\r\n            case \"CommonGoalDiagonal\":\r\n                System.out.println(\"CommonGoalDiagonal: Five tiles of the same type forming a diagonal.\");\r\n                break;\r\n            case \"CommonGoalSquare\":\r\n                System.out.println(\"CommonGoalSquare: Two groups each containing 4 tiles of the same type in a 2x2 \" +\r\n                        \"square. The tiles of one square can be different from those of the other square.\");\r\n            case \"CommonGoalStairs\":\r\n                System.out.println(\"CommonGoalStairs: Five columns of increasing or decreasing height. \" +\r\n                        \"Starting from the first column on the left or on the right, \" +\r\n                        \"each next column must be made of exactly one more tile. Tiles can be of any type.\");\r\n                break;\r\n            case \"CommonGoal4Group\":\r\n                System.out.println(\"CommonGoal4Group: Four groups each containing at least 4 tiles of the same type \" +\r\n                        \"(not necessarily in the depicted shape). The tiles of one group can be different \" +\r\n                        \"from those of another group.\");\r\n                break;\r\n            case \"CommonGoal6Group\":\r\n                System.out.println(\"CommonGoal6Group: Six groups each containing at least 2 tiles of the same type \" +\r\n                        \"(not necessarily in the depicted shape). The tiles of one group can be different \" +\r\n                        \"from those of another group.\");\r\n                break;\r\n            case \"CommonGoalXShape\":\r\n                System.out.println(\"CommonGoalXShape: Five tiles of the same type forming an X.\");\r\n                break;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AM-21/src/main/java/org/am21/client/view/cli/Cli.java b/AM-21/src/main/java/org/am21/client/view/cli/Cli.java
--- a/AM-21/src/main/java/org/am21/client/view/cli/Cli.java	(revision 32f36ad2a9eceef15701928b02a085f89afd27c2)
+++ b/AM-21/src/main/java/org/am21/client/view/cli/Cli.java	(date 1682517909957)
@@ -241,6 +241,7 @@
     public boolean askJoinMatch() throws ServerNotActiveException, RemoteException {
         //TODO: CLI display> Match_List
         int matchID;
+        showMatchList();
 
         try {
             System.out.print("Please enter the room number: ");
@@ -259,6 +260,10 @@
     @Override
     public void showMatchList() throws RemoteException {
         //TODO: add method in ClientIH that will use CB to return the match list
+        System.out.println("Match List:");
+//        for (int i = 0; i < JSONConverter.matchID; i++) {
+//            System.out.println(JSONConverter.matchID);
+//        }
     }
 
     /**
@@ -411,7 +416,8 @@
 
     @Override
     public boolean askExitGame() {
-
+        //iClientInputHandler.exitGame();
+        System.exit(0);
         return false;
     }
 
@@ -649,9 +655,6 @@
                 }
             } while (selectColumn < 0 || selectColumn > BOARD_COLUMN);
 
-            //TODO: la conferma o retry è gia presente in askSelection(), quindi questo è ridondante
-            System.out.println("The coordinates you have chosen are: [" + selectRow + ", " +
-                    selectColumn + "] - " + showItemInCell(selectRow, selectColumn));
             System.out.println("""
             Confirm your choice:
             1. Confirm.
Index: AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.am21.networkRMI;\r\n\r\nimport org.am21.controller.GameController;\r\nimport org.am21.controller.PlayerController;\r\nimport org.am21.model.GameManager;\r\nimport org.am21.model.Player;\r\nimport org.am21.model.enumer.ServerMessage;\r\nimport org.am21.model.enumer.UserStatus;\r\n\r\nimport java.rmi.RemoteException;\r\nimport java.rmi.server.ServerNotActiveException;\r\nimport java.rmi.server.UnicastRemoteObject;\r\n\r\n//TODO: we need reference of this class in every player instance, so we can send message to the client\r\npublic class ClientInputHandler extends UnicastRemoteObject implements IClientInput {\r\n    public String userName;\r\n    public String userHost;\r\n    private Integer createMatchRequestCount = 0;\r\n    public PlayerController playerController;\r\n    public IClientCallBack callBack;\r\n\r\n    /**\r\n     * Creates and exports a new UnicastRemoteObject object using an\r\n     * anonymous port.\r\n     * @throws RemoteException if failed to export object\r\n     * @since JDK1.1\r\n     */\r\n    public ClientInputHandler() throws RemoteException {\r\n    }\r\n\r\n    //TODO: Check if the ip address and port are valid\r\n\r\n//        Get the IP address of the client\r\n//        System.out.println(\"Hello, I am \" + getClientHost() + \":\" + getClientPort());\r\n\r\n    /**\r\n     * @return the result of the operation\r\n     * @throws ServerNotActiveException if the client is not active\r\n     */\r\n    //TODO:When the command is not from the current player, the command should be ignored.\r\n    public boolean checkPlayerActionPhase() throws ServerNotActiveException {\r\n        String userHost = getClientHost();\r\n        synchronized (GameManager.playerMatchMap) {\r\n            synchronized (GameManager.matchList) {\r\n                return GameManager.playerMatchMap.containsKey(userHost) &&\r\n                        userHost.equals(GameManager.matchList.\r\n                                get(GameManager.playerMatchMap.get(userHost)).currentPlayer.getHost());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param username\r\n     * @return\r\n     * @throws RemoteException\r\n     * @throws ServerNotActiveException\r\n     */\r\n    @Override\r\n    public boolean logIn(String username, IClientCallBack clientCallBack) throws RemoteException, ServerNotActiveException {\r\n        userHost = getClientHost();\r\n        this.userName = username;\r\n        playerController = new PlayerController(username, this);\r\n        //TODO:the same username is not allowed to log in(same name not allowed)\r\n        synchronized (GameManager.players) {\r\n            if (!GameManager.players.contains(playerController.getPlayer())) {\r\n                GameManager.players.add(playerController.getPlayer());\r\n            }\r\n        }\r\n\r\n        playerController.clientInput.callBack.sendMessageToClient(ServerMessage.Login_Ok.value()+username);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param playerNum\r\n     * @return\r\n     * @throws RemoteException\r\n     * @throws ServerNotActiveException\r\n     */\r\n    @Override\r\n    public boolean createMatch(int playerNum) throws RemoteException, ServerNotActiveException {\r\n        if(GameController.createMatch(userName, createMatchRequestCount, playerNum, playerController)){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param matchID\r\n     * @return\r\n     * @throws RemoteException\r\n     * @throws ServerNotActiveException\r\n     */\r\n    @Override\r\n    public boolean joinGame(int matchID) throws RemoteException, ServerNotActiveException {\r\n        if(GameController.joinGame(matchID, userName, playerController)){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n//    public void startMatch(){\r\n//        if(GameManager.playerMatchMap.containsKey(playerController.player.getName())){\r\n//            GameManager.matchList.get(GameManager.playerMatchMap.get(playerController.player.getName())).matchStart();\r\n//        }\r\n//    }\r\n\r\n    /**\r\n     * @param row\r\n     * @param col\r\n     * @return\r\n     * @throws ServerNotActiveException\r\n     */\r\n    public boolean selectCell(int row, int col) throws RemoteException, ServerNotActiveException {\r\n        if (!checkPlayerActionPhase() && playerController.selectCell(row, col)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param colNum\r\n     * @return\r\n     * @throws ServerNotActiveException\r\n     */\r\n    public boolean insertInColumn(int colNum) throws RemoteException, ServerNotActiveException {\r\n        if (!checkPlayerActionPhase() && playerController.tryToInsert(colNum)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @throws ServerNotActiveException\r\n     */\r\n    public boolean deselectCards() throws RemoteException, ServerNotActiveException {\r\n        if (!checkPlayerActionPhase() && playerController.unselectCards()) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param pos1\r\n     * @param pos2\r\n     * @throws ServerNotActiveException\r\n     */\r\n    @Override\r\n    public boolean sortHand(int pos1, int pos2) throws RemoteException, ServerNotActiveException {\r\n        if (!checkPlayerActionPhase() && playerController.changeHandOrder(pos1, pos2)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Player can leave the match when Match is WaitingPlayers or is GameGoing\r\n     *\r\n     * @return\r\n     */\r\n    @Override\r\n    public boolean leaveMatch() throws RemoteException {\r\n        if (GameController.removePlayerFromMatch(playerController, playerController.getPlayer().getMatch().matchID)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Use this method to get the virtual view of the match\r\n     *\r\n     * @return JSON string of the virtual view\r\n     * @throws RemoteException\r\n     */\r\n    @Override\r\n    public String getVirtualView() throws RemoteException {\r\n        return playerController.getPlayer().getMatch().getVirtualView();\r\n    }\r\n\r\n    /**\r\n     * This method is called after the login of the player\r\n     * @param callBack\r\n     * @throws RemoteException\r\n     */\r\n    @Override\r\n    public void registerCallBack(IClientCallBack callBack) throws RemoteException {\r\n        this.callBack = callBack;\r\n        GameManager.client_connected++;\r\n        System.out.println(\"Client Callback registered:\"+ GameManager.client_connected);\r\n    }\r\n\r\n    @Override\r\n    public void sendChatMessage(String message) throws RemoteException {\r\n\r\n    }\r\n    @Override\r\n    public void printOnlinePlayers() throws RemoteException{\r\n        String message=\"\";\r\n        this.callBack.sendMessageToClient(String.valueOf(ServerMessage.ListP));\r\n        for(Player p:GameManager.players){\r\n            if(p.getStatus()==UserStatus.Online || p.getStatus()==UserStatus.GameMember){\r\n                message+=(\"[\"+p.getNickname()+\"] \");\r\n\r\n            }\r\n        }\r\n        callBack.sendMessageToClient(message);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java b/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java
--- a/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java	(revision 32f36ad2a9eceef15701928b02a085f89afd27c2)
+++ b/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java	(date 1682499841268)
@@ -29,6 +29,7 @@
     }
 
     //TODO: Check if the ip address and port are valid
+    //TODO: exitGame()
 
 //        Get the IP address of the client
 //        System.out.println("Hello, I am " + getClientHost() + ":" + getClientPort());
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"dd2f3e9a-b514-48f2-995d-660d696de66e\" name=\"Changes\" comment=\"update Cli\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/cli/Cli.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/cli/Cli.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"19ab3365-554c-40d9-959c-e6407d37c953\" name=\"Changes by jef\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"CoverageOptionsProvider\">\r\n    <option name=\"myAddOrReplace\" value=\"0\" />\r\n  </component>\r\n  <component name=\"ExportToHTMLSettings\">\r\n    <option name=\"OPEN_IN_BROWSER\" value=\"true\" />\r\n    <option name=\"OUTPUT_DIRECTORY\" value=\"C:\\Users\\user\\IdeaProjects\\IS23-AM21\\_deliveries\\report\\20230422\\GameTest\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"AnnotationType\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NFD0XR5dL3DHYxwIaU5VQWdQAW\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\r\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;D:/xmry/IS23-AM21/AM-21/src/main/java/org/am21/test&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/user/IdeaProjects/IS23-AM21/_deliveries/report/20230422/BoardTest&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs.jest.jest_package&quot;: &quot;&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.21034482&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;inlay.hints&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"org.am21.board\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\user\\IdeaProjects\\IS23-AM21\\AM-21\\src\\main\\java\\org\\am21\\view\\gui\" />\r\n      <recent name=\"$PROJECT_DIR$/AM-21/imgs/boards\" />\r\n      <recent name=\"$PROJECT_DIR$/AM-21/src/main/java/org/am21/view/cli\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.am21\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"org.am21.board\" />\r\n      <recent name=\"org.am21.test\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"org.am21.utilities\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.PlayerTest\">\r\n    <configuration name=\"BoardInterface\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.client.view.gui.BoardInterface\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.client.view.gui.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CLITest\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.CLITest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CLITest2\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.CLITest\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ClientApp\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.client.ClientApp\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.client.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LivingRoomBoard\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.client.view.gui.LivingRoomBoard\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.client.view.gui.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ServerTest\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.controller.ServerMain\" />\r\n      <module name=\"IS23-AM21\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"--Server Main\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BagTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Bag\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Board\" />\r\n          <option name=\"ENABLED\" value=\"false\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.BoardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.CardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.BagTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BagTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.board.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.BagTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BoardTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Board\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Bag\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.BoardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Grid\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.BoardTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CommonGoalTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.CardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.goals.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.board.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.ItemCard\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Grid\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.CommonGoal\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.CommonGoals.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.goals\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.goals.CommonGoalTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GameTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.board.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.game\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.GameTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GameTest.testCreateAndJoinMatch\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.game.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.game\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.GameTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testCreateAndJoinMatch\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MatchTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Match\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Player\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.controller.PlayerController\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.game\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.game.MatchTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PersonalGoalTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Cards.PersonalGoalCard\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.utilities.CardUtil\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.goals\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.goals.PersonalGoalTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlayerTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.controller.PlayerController\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.Player\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Hand\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Board\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.player\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.player.PlayerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ShelfTest\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.model.items.Shelf\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.board\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.board.ShelfTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WrongModelTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"IS23-AM21\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.am21.extra.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.am21.extra\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.am21.extra.WrongModelTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.CLITest\" />\r\n      <item itemvalue=\"Application.CLITest2\" />\r\n      <item itemvalue=\"Application.ServerTest\" />\r\n      <item itemvalue=\"Application.ClientApp\" />\r\n      <item itemvalue=\"Application.BoardInterface\" />\r\n      <item itemvalue=\"Application.LivingRoomBoard\" />\r\n      <item itemvalue=\"JUnit.MatchTest\" />\r\n      <item itemvalue=\"JUnit.CommonGoalTest\" />\r\n      <item itemvalue=\"JUnit.BoardTest\" />\r\n      <item itemvalue=\"JUnit.ShelfTest\" />\r\n      <item itemvalue=\"JUnit.PlayerTest\" />\r\n      <item itemvalue=\"JUnit.PersonalGoalTest\" />\r\n      <item itemvalue=\"JUnit.BagTest\" />\r\n      <item itemvalue=\"JUnit.GameTest\" />\r\n      <item itemvalue=\"JUnit.WrongModelTest\" />\r\n      <item itemvalue=\"JUnit.GameTest.testCreateAndJoinMatch\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.ClientApp\" />\r\n        <item itemvalue=\"JUnit.WrongModelTest\" />\r\n        <item itemvalue=\"Application.LivingRoomBoard\" />\r\n        <item itemvalue=\"Application.BoardInterface\" />\r\n        <item itemvalue=\"JUnit.GameTest.testCreateAndJoinMatch\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SliceToolwindowSettings\">\r\n    <option name=\"autoScroll\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"dd2f3e9a-b514-48f2-995d-660d696de66e\" name=\"Changes\" comment=\"update Cli\" />\r\n      <created>1679250713673</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679250713673</updated>\r\n      <workItem from=\"1679250715133\" duration=\"22000\" />\r\n      <workItem from=\"1679250813095\" duration=\"12000\" />\r\n      <workItem from=\"1679250912541\" duration=\"308000\" />\r\n      <workItem from=\"1679251381863\" duration=\"2604000\" />\r\n      <workItem from=\"1679308546002\" duration=\"349000\" />\r\n      <workItem from=\"1679308546002\" duration=\"3248000\" />\r\n      <workItem from=\"1679339055181\" duration=\"182000\" />\r\n      <workItem from=\"1680355152599\" duration=\"4883000\" />\r\n      <workItem from=\"1680417995006\" duration=\"8820000\" />\r\n      <workItem from=\"1680474797686\" duration=\"3253000\" />\r\n      <workItem from=\"1680501508839\" duration=\"8000000\" />\r\n      <workItem from=\"1680588895976\" duration=\"8012000\" />\r\n      <workItem from=\"1680608322081\" duration=\"11375000\" />\r\n      <workItem from=\"1680623672433\" duration=\"19107000\" />\r\n      <workItem from=\"1680701711746\" duration=\"14352000\" />\r\n      <workItem from=\"1680848366824\" duration=\"25424000\" />\r\n      <workItem from=\"1680907346325\" duration=\"3966000\" />\r\n      <workItem from=\"1680951551963\" duration=\"4145000\" />\r\n      <workItem from=\"1680995184877\" duration=\"1990000\" />\r\n      <workItem from=\"1681036343974\" duration=\"1835000\" />\r\n      <workItem from=\"1681131553944\" duration=\"15246000\" />\r\n      <workItem from=\"1681226309147\" duration=\"22942000\" />\r\n      <workItem from=\"1681288058934\" duration=\"19847000\" />\r\n      <workItem from=\"1681377455700\" duration=\"2639000\" />\r\n      <workItem from=\"1681398624102\" duration=\"21656000\" />\r\n      <workItem from=\"1681421652298\" duration=\"3602000\" />\r\n      <workItem from=\"1681460393180\" duration=\"12295000\" />\r\n      <workItem from=\"1681477081214\" duration=\"7986000\" />\r\n      <workItem from=\"1681541209096\" duration=\"7634000\" />\r\n      <workItem from=\"1681551899670\" duration=\"100000\" />\r\n      <workItem from=\"1681552007011\" duration=\"21000\" />\r\n      <workItem from=\"1681552047893\" duration=\"814000\" />\r\n      <workItem from=\"1681560816574\" duration=\"12870000\" />\r\n      <workItem from=\"1681577459186\" duration=\"2359000\" />\r\n      <workItem from=\"1681581643852\" duration=\"7446000\" />\r\n      <workItem from=\"1681632703543\" duration=\"5137000\" />\r\n      <workItem from=\"1681758338761\" duration=\"7840000\" />\r\n      <workItem from=\"1681825926566\" duration=\"1573000\" />\r\n      <workItem from=\"1681919105138\" duration=\"1042000\" />\r\n      <workItem from=\"1681921413336\" duration=\"449000\" />\r\n      <workItem from=\"1681925117787\" duration=\"185000\" />\r\n      <workItem from=\"1681925667465\" duration=\"4554000\" />\r\n      <workItem from=\"1681975516997\" duration=\"603000\" />\r\n      <workItem from=\"1681995021062\" duration=\"295000\" />\r\n      <workItem from=\"1682069476172\" duration=\"2902000\" />\r\n      <workItem from=\"1682113698452\" duration=\"4477000\" />\r\n      <workItem from=\"1682149826521\" duration=\"9836000\" />\r\n      <workItem from=\"1682190503949\" duration=\"10572000\" />\r\n      <workItem from=\"1682234904779\" duration=\"8324000\" />\r\n      <workItem from=\"1682257571912\" duration=\"10427000\" />\r\n      <workItem from=\"1682317780363\" duration=\"8504000\" />\r\n      <workItem from=\"1682408313525\" duration=\"20993000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"update scoringToken test\">\r\n      <created>1680516093577</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680516093577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"delete ScoringTokenCard.java\">\r\n      <created>1680684101816</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680684101816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fixed some cli problem\">\r\n      <created>1681588933882</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681588933882</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update Cli\">\r\n      <created>1681644813012</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681644813012</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n        <option value=\"Space.CommitStatus\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"74f73804-6c59-4467-bff0-edcfdcfb0c5d\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"structure\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"dir:D:/xmry/IS23-AM21/AM-21/src/test/java/org.am21\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"74f73804-6c59-4467-bff0-edcfdcfb0c5d\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add method Shelf as request\" />\r\n    <MESSAGE value=\"update scoringToken test\" />\r\n    <MESSAGE value=\"delete ScoringTokenCard.java\" />\r\n    <MESSAGE value=\"fixed some cli problem\" />\r\n    <MESSAGE value=\"update Cli\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update Cli\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/AM-21/src/test/java/org.am21/board/ShelfTest.java</url>\r\n          <line>131</line>\r\n          <properties class=\"org.am21.board.ShelfTest\" method=\"testShelfFullness\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"13\" />\r\n        </breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java</url>\r\n          <line>69</line>\r\n          <option name=\"timeStamp\" value=\"14\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <pin-to-top-manager>\r\n      <pinned-members>\r\n        <PinnedItemInfo parentTag=\"org.am21.model.items.Shelf\" memberName=\"slotCol\" />\r\n        <PinnedItemInfo parentTag=\"org.am21.model.Cards.ItemCard\" memberName=\"nameCard\" />\r\n        <PinnedItemInfo parentTag=\"org.am21.model.items.Shelf\" memberName=\"player\" />\r\n        <PinnedItemInfo parentTag=\"org.am21.model.items.Shelf\" memberName=\"matrix\" />\r\n      </pinned-members>\r\n    </pin-to-top-manager>\r\n    <watches-manager>\r\n      <configuration name=\"JUnit\">\r\n        <watch expression=\"s.slotCol\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$MatchTest.ic\" NAME=\"MatchTest Coverage Results\" MODIFIED=\"1682199892824\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.Match</FILTER>\r\n      <FILTER>org.am21.model.Player</FILTER>\r\n      <FILTER>org.am21.controller.PlayerController</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerControllerTest_selectionSimulation.ic\" NAME=\"PlayerControllerTest.selectionSimulation Coverage Results\" MODIFIED=\"1680467526674\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerControllerTest_randomSimulation.ic\" NAME=\"PlayerControllerTest.randomSimulation Coverage Results\" MODIFIED=\"1680449427731\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerTest.ic\" NAME=\"PlayerTest Coverage Results\" MODIFIED=\"1681245462567\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.controller.PlayerController</FILTER>\r\n      <FILTER>org.am21.model.Player</FILTER>\r\n      <FILTER>org.am21.model.items.Hand</FILTER>\r\n      <FILTER>org.am21.model.items.Board</FILTER>\r\n      <FILTER>org.am21.model.items.Shelf</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$WrongModelTest_runner.ic\" NAME=\"WrongModelTest.runner Coverage Results\" MODIFIED=\"1680734633906\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.extra.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$ShelfTest.ic\" NAME=\"ShelfTest Coverage Results\" MODIFIED=\"1681234399840\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.items.Shelf</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerTest__1_.ic\" NAME=\"PlayerTest (1) Coverage Results\" MODIFIED=\"1680734477813\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerControllerTest.ic\" NAME=\"PlayerControllerTest Coverage Results\" MODIFIED=\"1680447627787\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$BagTest.ic\" NAME=\"BagTest Coverage Results\" MODIFIED=\"1681165337612\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.items.Bag</FILTER>\r\n      <FILTER>org.am21.utilities.BoardUtil</FILTER>\r\n      <FILTER>org.am21.utilities.CardUtil</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$PlayerTest_unfinishedGameSimulation.ic\" NAME=\"PlayerTest.unfinishedGameSimulation Coverage Results\" MODIFIED=\"1680734516188\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$GameTest.ic\" NAME=\"GameTest Coverage Results\" MODIFIED=\"1682200260552\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.*</FILTER>\r\n      <FILTER>org.am21.board.*</FILTER>\r\n      <FILTER>org.am21.controller.*</FILTER>\r\n      <FILTER>org.am21.utilities.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$WrongModelTest_testPlayerList.ic\" NAME=\"WrongModelTest.testPlayerList Coverage Results\" MODIFIED=\"1680734614689\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$MatchTest_run.ic\" NAME=\"MatchTest.run Coverage Results\" MODIFIED=\"1680507582967\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$CommonGoalTest.ic\" NAME=\"CommonGoalTest Coverage Results\" MODIFIED=\"1681165866156\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.utilities.CardUtil</FILTER>\r\n      <FILTER>org.am21.goals.*</FILTER>\r\n      <FILTER>org.am21.board.*</FILTER>\r\n      <FILTER>org.am21.model.items.Shelf</FILTER>\r\n      <FILTER>org.am21.model.Cards.ItemCard</FILTER>\r\n      <FILTER>org.am21.model.items.Grid</FILTER>\r\n      <FILTER>org.am21.model.Cards.CommonGoal</FILTER>\r\n      <FILTER>org.am21.model.Cards.CommonGoals.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$BoardTest.ic\" NAME=\"BoardTest Coverage Results\" MODIFIED=\"1681165499235\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.model.items.Board</FILTER>\r\n      <FILTER>org.am21.model.items.Bag</FILTER>\r\n      <FILTER>org.am21.utilities.BoardUtil</FILTER>\r\n      <FILTER>org.am21.model.items.Grid</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/IS23_AM21$BoardTest_testOccupation.ic\" NAME=\"BoardTest.testOccupation Coverage Results\" MODIFIED=\"1680734659047\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>org.am21.board.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 32f36ad2a9eceef15701928b02a085f89afd27c2)
+++ b/.idea/workspace.xml	(date 1682546539804)
@@ -7,6 +7,7 @@
     <list default="true" id="dd2f3e9a-b514-48f2-995d-660d696de66e" name="Changes" comment="update Cli">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/cli/Cli.java" beforeDir="false" afterPath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/client/view/cli/Cli.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java" afterDir="false" />
     </list>
     <list id="19ab3365-554c-40d9-959c-e6407d37c953" name="Changes by jef" comment="" />
     <option name="SHOW_DIALOG" value="false" />
@@ -96,7 +97,7 @@
       <recent name="org.am21.utilities" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.PlayerTest">
+  <component name="RunManager" selected="Application.ServerTest">
     <configuration name="BoardInterface" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="org.am21.client.view.gui.BoardInterface" />
       <module name="IS23-AM21" />
@@ -146,6 +147,13 @@
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Main" />
+      <module name="IS23-AM21" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -298,22 +306,6 @@
       <option name="MAIN_CLASS_NAME" value="org.am21.game.GameTest" />
       <option name="METHOD_NAME" value="" />
       <option name="TEST_OBJECT" value="class" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="GameTest.testCreateAndJoinMatch" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
-      <module name="IS23-AM21" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="org.am21.game.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="org.am21.game" />
-      <option name="MAIN_CLASS_NAME" value="org.am21.game.GameTest" />
-      <option name="METHOD_NAME" value="testCreateAndJoinMatch" />
-      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -433,6 +425,7 @@
       <item itemvalue="Application.CLITest" />
       <item itemvalue="Application.CLITest2" />
       <item itemvalue="Application.ServerTest" />
+      <item itemvalue="Application.Main" />
       <item itemvalue="Application.ClientApp" />
       <item itemvalue="Application.BoardInterface" />
       <item itemvalue="Application.LivingRoomBoard" />
@@ -445,15 +438,14 @@
       <item itemvalue="JUnit.BagTest" />
       <item itemvalue="JUnit.GameTest" />
       <item itemvalue="JUnit.WrongModelTest" />
-      <item itemvalue="JUnit.GameTest.testCreateAndJoinMatch" />
     </list>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.Main" />
         <item itemvalue="Application.ClientApp" />
         <item itemvalue="JUnit.WrongModelTest" />
         <item itemvalue="Application.LivingRoomBoard" />
         <item itemvalue="Application.BoardInterface" />
-        <item itemvalue="JUnit.GameTest.testCreateAndJoinMatch" />
       </list>
     </recent_temporary>
   </component>
@@ -520,6 +512,8 @@
       <workItem from="1682257571912" duration="10427000" />
       <workItem from="1682317780363" duration="8504000" />
       <workItem from="1682408313525" duration="20993000" />
+      <workItem from="1682497671584" duration="5121000" />
+      <workItem from="1682513697585" duration="5531000" />
     </task>
     <task id="LOCAL-00001" summary="update scoringToken test">
       <created>1680516093577</created>
@@ -549,7 +543,14 @@
       <option name="project" value="LOCAL" />
       <updated>1681644813012</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="update Cli">
+      <created>1682436732444</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1682436732444</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -631,11 +632,6 @@
           <properties class="java.lang.NullPointerException" package="java.lang" />
           <option name="timeStamp" value="13" />
         </breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/AM-21/src/main/java/org/am21/networkRMI/ClientInputHandler.java</url>
-          <line>69</line>
-          <option name="timeStamp" value="14" />
-        </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
     <pin-to-top-manager>
